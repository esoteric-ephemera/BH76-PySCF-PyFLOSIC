#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/NH2/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 13:48:06 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N      0.000000000000   0.000000000000   0.424246340000 AA    0.000000000000   0.000000000000   0.801709391949 Bohr
[INPUT]  2 H     -0.802312090000   0.000000000000  -0.212123170000 AA   -1.516150116527   0.000000000000  -0.400854695975 Bohr
[INPUT]  3 H      0.802312090000   0.000000000000  -0.212123170000 AA    1.516150116527   0.000000000000  -0.400854695975 Bohr

nuclear repulsion = 7.56430015711315
number of shells = 47
number of NR pGTOs = 189
number of NR cGTOs = 172
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.46


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmpv71ie542
max_memory 4000 MB (current use 66 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b201309f940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b201309f8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 499764
init E= -55.7215723485648
  alpha nocc = 5  HOMO = -0.259615861963107  LUMO = -0.024825662823132
  beta  nocc = 4  HOMO = -0.332459920577126  LUMO = -0.259615861963107

WARN: system HOMO -0.259615861963107 >= system LUMO -0.259615861963107

cycle= 1 E= -55.8212528692355  delta_E= -0.0997  |g|= 0.166  |ddm|= 0.576
  alpha nocc = 5  HOMO = -0.226582693022381  LUMO = -0.025094418964219
  beta  nocc = 4  HOMO = -0.212647828763  LUMO = -0.131712981109812
cycle= 2 E= -55.8081497790078  delta_E= 0.0131  |g|= 0.239  |ddm|= 0.207
  alpha nocc = 5  HOMO = -0.281896716841999  LUMO = -0.0301274039361151
  beta  nocc = 4  HOMO = -0.270894999084264  LUMO = -0.178990174381927
cycle= 3 E= -55.8345277685612  delta_E= -0.0264  |g|= 0.0316  |ddm|= 0.12
  alpha nocc = 5  HOMO = -0.274257982434668  LUMO = -0.0276062086096926
  beta  nocc = 4  HOMO = -0.26607908534244  LUMO = -0.167086432789101
cycle= 4 E= -55.8349087413591  delta_E= -0.000381  |g|= 0.00621  |ddm|= 0.0146
  alpha nocc = 5  HOMO = -0.275476894936098  LUMO = -0.0279634016716278
  beta  nocc = 4  HOMO = -0.265831778439979  LUMO = -0.166873607419068
cycle= 5 E= -55.8349262187843  delta_E= -1.75e-05  |g|= 0.000525  |ddm|= 0.00288
  alpha nocc = 5  HOMO = -0.275494411637137  LUMO = -0.0279126746793292
  beta  nocc = 4  HOMO = -0.265655738415317  LUMO = -0.166710919533653
cycle= 6 E= -55.8349264584292  delta_E= -2.4e-07  |g|= 0.000126  |ddm|= 0.000585
  alpha nocc = 5  HOMO = -0.275511131176412  LUMO = -0.0279087837913885
  beta  nocc = 4  HOMO = -0.265662565519542  LUMO = -0.166711262846026
cycle= 7 E= -55.8349264766668  delta_E= -1.82e-08  |g|= 9.41e-06  |ddm|= 0.000186
  alpha nocc = 5  HOMO = -0.275506181084331  LUMO = -0.0279060926087235
  beta  nocc = 4  HOMO = -0.265656560568889  LUMO = -0.166707006237853
Extra cycle  E= -55.8349264767248  delta_E= -5.8e-11  |g|= 4.74e-06  |ddm|= 1.09e-05
converged SCF energy = -55.8349264767248  <S^2> = 0.75300358  2S+1 = 2.0030013
