#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/oh-/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 15:21:56 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 10
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.481022120000 AA    0.000000000000   0.000000000000   0.909000066658 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.481022120000 AA    0.000000000000   0.000000000000  -0.909000066658 Bohr

nuclear repulsion = 4.40043972131677
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.36


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmp5tig_ntr
max_memory 4000 MB (current use 60 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2abf38ec3940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2abf38ec38b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 329600
init E= -75.6303989194138
  HOMO = -0.366286222522271  LUMO = -0.0275729204586334
cycle= 1 E= -75.4731008804658  delta_E= 0.157  |g|= 1.16  |ddm|= 0.608

WARN: HOMO 0.258527706039991 == LUMO 0.258527706039993

cycle= 2 E= -69.9303564683139  delta_E= 5.54  |g|= 3.24  |ddm|=  134
  HOMO = -0.14620134513091  LUMO = 0.104150598857266
cycle= 3 E= -75.6178122598592  delta_E= -5.69  |g|= 0.767  |ddm|=  134
  HOMO = 0.0309076522314612  LUMO = 0.13069650665191
cycle= 4 E= -75.7331527976444  delta_E= -0.115  |g|= 0.359  |ddm|= 0.316
  HOMO = 0.0757198157188432  LUMO = 0.129582029899521
cycle= 5 E= -75.7595382457641  delta_E= -0.0264  |g|= 0.0728  |ddm|= 0.197
  HOMO = 0.0759141175088202  LUMO = 0.129162047442901
cycle= 6 E= -75.7601875298711  delta_E= -0.000649  |g|= 0.0238  |ddm|= 0.0323
  HOMO = 0.077514615868067  LUMO = 0.129925333070868
cycle= 7 E= -75.7602921512014  delta_E= -0.000105  |g|= 0.00517  |ddm|= 0.00841
  HOMO = 0.0781724928767271  LUMO = 0.130155691588857
cycle= 8 E= -75.7602978355243  delta_E= -5.68e-06  |g|= 0.000875  |ddm|= 0.00234
  HOMO = 0.0782894078441654  LUMO = 0.130189653203051
cycle= 9 E= -75.760297987357  delta_E= -1.52e-07  |g|= 9.29e-05  |ddm|= 0.000521
  HOMO = 0.0782743354798195  LUMO = 0.130186987222188
cycle= 10 E= -75.7602979892248  delta_E= -1.87e-09  |g|= 8.86e-06  |ddm|= 6.88e-05
  HOMO = 0.0782782891207397  LUMO = 0.130187307714067
Extra cycle  E= -75.7602979890502  delta_E= 1.75e-10  |g|= 3.1e-05  |ddm|= 2.19e-05
converged SCF energy = -75.7602979890502
