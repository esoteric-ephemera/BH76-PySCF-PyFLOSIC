#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/clch3clts/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:57:42 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 44
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Cl    -0.000274640000   0.019242910000   2.322537350000 AA   -0.000518994383   0.036363829740   4.388959505573 Bohr
[INPUT]  2 C      0.000213360000   0.000202910000  -0.000052390000 AA    0.000403191966   0.000383444328  -0.000099002752 Bohr
[INPUT]  3 H      0.760980040000  -0.751016270000   0.006413620000 AA    1.438043861861  -1.419215065392   0.012119985267 Bohr
[INPUT]  4 H     -1.030750620000  -0.283007150000   0.002183610000 AA   -1.947836374526  -0.534806004794   0.004126424863 Bohr
[INPUT]  5 H      0.270428500000   1.034644730000  -0.008660410000 AA    0.511035801277   1.955195175925  -0.016365803026 Bohr
[INPUT]  6 Cl    -0.000596640000  -0.020067130000  -2.322421790000 AA   -0.001127486195  -0.037921379806  -4.388741128822 Bohr

nuclear repulsion = 110.279564127181
number of shells = 99
number of NR pGTOs = 461
number of NR cGTOs = 386
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.33


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmph9vhl5os
max_memory 4000 MB (current use 62 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b3ac8a76940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b3ac8a768b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 963600
init E= -959.659878602425
  HOMO = -0.313645642625257  LUMO = -0.135063701995678
cycle= 1 E= -959.938134102109  delta_E= -0.278  |g|= 0.454  |ddm|= 1.69
  HOMO = 0.0303438716269018  LUMO = 0.11149031128588
cycle= 2 E= -959.822743613347  delta_E= 0.115  |g|= 0.81  |ddm|= 1.68
  HOMO = -0.060409973254296  LUMO = 0.102098147085074
cycle= 3 E= -960.007454619071  delta_E= -0.185  |g|= 0.146  |ddm|= 1.28
  HOMO = -0.063225319330695  LUMO = 0.08848005539953
cycle= 4 E= -960.0131783546  delta_E= -0.00572  |g|= 0.0309  |ddm|= 0.108
  HOMO = -0.0608998642920182  LUMO = 0.0919211282914069
cycle= 5 E= -960.013409294848  delta_E= -0.000231  |g|= 0.0083  |ddm|= 0.0346
  HOMO = -0.061114950420635  LUMO = 0.0916618568451493
cycle= 6 E= -960.013426817124  delta_E= -1.75e-05  |g|= 0.00144  |ddm|= 0.00798
  HOMO = -0.0612013262302156  LUMO = 0.0916279361519492
cycle= 7 E= -960.013427265243  delta_E= -4.48e-07  |g|= 8.6e-05  |ddm|= 0.00204
  HOMO = -0.0612226267439819  LUMO = 0.0916053698230912
cycle= 8 E= -960.013427265156  delta_E= 8.69e-11  |g|= 6.59e-05  |ddm|= 0.000153
  HOMO = -0.0612266879673999  LUMO = 0.0916033933079935
Extra cycle  E= -960.013427257379  delta_E= 7.78e-09  |g|= 0.000164  |ddm|= 0.000213
converged SCF energy = -960.013427257379
