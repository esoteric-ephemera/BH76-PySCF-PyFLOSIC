#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/ch3/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:51:19 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.538658120000   0.932983230000   0.000000000000 AA    1.017916321573   1.763082783512   0.000000000000 Bohr
[INPUT]  3 H      0.538658120000  -0.932983230000   0.000000000000 AA    1.017916321573  -1.763082783512   0.000000000000 Bohr
[INPUT]  4 H     -1.077316240000   0.000000000000   0.000000000000 AA   -2.035832643146   0.000000000000   0.000000000000 Bohr

nuclear repulsion = 9.6923737285082
number of shells = 61
number of NR pGTOs = 237
number of NR cGTOs = 218
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.28


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmpfbirbzq9
max_memory 4000 MB (current use 64 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ba8065f6940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ba8065f68b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 669712
init E= -39.620213776584
  alpha nocc = 5  HOMO = -0.217820258881546  LUMO = -0.0216973781577558
  beta  nocc = 4  HOMO = -0.439981322761873  LUMO = -0.217820258881546

WARN: system HOMO -0.217820258881546 >= system LUMO -0.217820258881546

cycle= 1 E= -39.772539883254  delta_E= -0.152  |g|= 0.184  |ddm|= 0.78
  alpha nocc = 5  HOMO = -0.139048092352618  LUMO = -0.00811751281023818
  beta  nocc = 4  HOMO = -0.315505795217486  LUMO = -0.0630518934215154
cycle= 2 E= -39.7596978315444  delta_E= 0.0128  |g|= 0.237  |ddm|= 0.294
  alpha nocc = 5  HOMO = -0.202027176709438  LUMO = -0.0173436089656239
  beta  nocc = 4  HOMO = -0.369610748044462  LUMO = -0.116126564077942
cycle= 3 E= -39.7913195570466  delta_E= -0.0316  |g|= 0.0161  |ddm|= 0.156
  alpha nocc = 5  HOMO = -0.199589908563445  LUMO = -0.0164361014653567
  beta  nocc = 4  HOMO = -0.368482558965218  LUMO = -0.109154860774338
cycle= 4 E= -39.7914559657131  delta_E= -0.000136  |g|= 0.00161  |ddm|= 0.012
  alpha nocc = 5  HOMO = -0.199413500603417  LUMO = -0.0161925659630094
  beta  nocc = 4  HOMO = -0.367575464702816  LUMO = -0.108252014488515
cycle= 5 E= -39.7914581475711  delta_E= -2.18e-06  |g|= 0.00031  |ddm|= 0.00282
  alpha nocc = 5  HOMO = -0.199509018636712  LUMO = -0.0162159829277574
  beta  nocc = 4  HOMO = -0.367685768878609  LUMO = -0.108292702675901
cycle= 6 E= -39.7914582658804  delta_E= -1.18e-07  |g|= 3.99e-05  |ddm|= 0.000693
  alpha nocc = 5  HOMO = -0.199491029164987  LUMO = -0.0162058464282495
  beta  nocc = 4  HOMO = -0.367662745465669  LUMO = -0.108271729649982
cycle= 7 E= -39.791458267374  delta_E= -1.49e-09  |g|= 2.74e-06  |ddm|= 6.86e-05
  alpha nocc = 5  HOMO = -0.199492167430548  LUMO = -0.0162061442916436
  beta  nocc = 4  HOMO = -0.367663790106943  LUMO = -0.108272717333589
Extra cycle  E= -39.7914582673743  delta_E= -3.41e-13  |g|= 2.1e-06  |ddm|= 5.14e-06
converged SCF energy = -39.7914582673743  <S^2> = 0.75372128  2S+1 = 2.0037178
