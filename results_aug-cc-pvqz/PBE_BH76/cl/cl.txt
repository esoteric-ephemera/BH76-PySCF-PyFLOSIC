#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/cl/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:55:54 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 1
[INPUT] num. electrons = 17
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Cl     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr

nuclear repulsion = 0
number of shells = 19
number of NR pGTOs = 112
number of NR cGTOs = 84
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.24


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmpohf2k3tr
max_memory 4000 MB (current use 64 MB)
number electrons alpha = 9  beta = 8
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b1a44068940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b1a440688b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 146944
init E= -459.935429402383
  alpha nocc = 9  HOMO = -0.326347725229949  LUMO = 0.0120193172404347

WARN: beta  nocc = 8  HOMO -0.326347725229951 >= LUMO -0.326347725229947


WARN: system HOMO -0.326347725229947 >= system LUMO -0.326347725229947

cycle= 1 E= -459.965313792501  delta_E= -0.0299  |g|= 0.0987  |ddm|= 0.714
  alpha nocc = 9  HOMO = -0.307086529040802  LUMO = 0.0115224025550676
  beta  nocc = 8  HOMO = -0.290117563139967  LUMO = -0.286840693867203
cycle= 2 E= -459.969402419791  delta_E= -0.00409  |g|= 0.0211  |ddm|= 0.114
  alpha nocc = 9  HOMO = -0.317878555249801  LUMO = 0.0100723272410133
  beta  nocc = 8  HOMO = -0.302857513295714  LUMO = -0.289112897398767
cycle= 3 E= -459.969592278638  delta_E= -0.00019  |g|= 0.0115  |ddm|= 0.0285
  alpha nocc = 9  HOMO = -0.311582602561068  LUMO = 0.0114260504736035
  beta  nocc = 8  HOMO = -0.296922944128071  LUMO = -0.282271653557303
cycle= 4 E= -459.96963312959  delta_E= -4.09e-05  |g|= 0.00727  |ddm|= 0.0173
  alpha nocc = 9  HOMO = -0.313511206507977  LUMO = 0.0110321452405902
  beta  nocc = 8  HOMO = -0.298931695329531  LUMO = -0.284082496190746
cycle= 5 E= -459.969652473061  delta_E= -1.93e-05  |g|= 8.34e-05  |ddm|= 0.00652
  alpha nocc = 9  HOMO = -0.313536908420291  LUMO = 0.0110137099646677
  beta  nocc = 8  HOMO = -0.298963941182  LUMO = -0.284116788206256
cycle= 6 E= -459.969652474474  delta_E= -1.41e-09  |g|= 1.22e-05  |ddm|= 0.000128
  alpha nocc = 9  HOMO = -0.313530590825588  LUMO = 0.0110139909652855
  beta  nocc = 8  HOMO = -0.298958831831074  LUMO = -0.28411144414875
Extra cycle  E= -459.969652474502  delta_E= -2.82e-11  |g|= 5.27e-06  |ddm|= 2.17e-05
converged SCF energy = -459.969652474502  <S^2> = 0.75323479  2S+1 = 2.0032322
