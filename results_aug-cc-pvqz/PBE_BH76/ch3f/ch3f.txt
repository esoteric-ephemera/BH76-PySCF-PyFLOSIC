#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/ch3f/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:52:25 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 5
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000   0.065566370000 AA    0.000000000000   0.000000000000   0.123902482282 Bohr
[INPUT]  2 F      0.000000000000   0.000000000000  -1.315628590000 AA    0.000000000000   0.000000000000  -2.486177716748 Bohr
[INPUT]  3 H      0.514916330000  -0.891861250000   0.416687410000 AA    0.973050840766  -1.685373503612   0.787425084454 Bohr
[INPUT]  4 H      0.514916330000   0.891861250000   0.416687410000 AA    0.973050840766   1.685373503612   0.787425084454 Bohr
[INPUT]  5 H     -1.029832670000   0.000000000000   0.416687410000 AA   -1.946101700430   0.000000000000   0.787425084454 Bohr

nuclear repulsion = 37.4230617142413
number of shells = 80
number of NR pGTOs = 330
number of NR cGTOs = 298
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.43


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmp9i_y0kdh
max_memory 4000 MB (current use 64 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b6d1c5e0940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b6d1c5e08b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 832280
init E= -139.634069756292
  HOMO = -0.375530113343101  LUMO = -0.0291220670243678
cycle= 1 E= -139.621278421692  delta_E= 0.0128  |g|= 0.448  |ddm|=  1.2
  HOMO = -0.192402624839212  LUMO = -0.0104099317099207
cycle= 2 E= -139.536213884086  delta_E= 0.0851  |g|= 0.883  |ddm|= 0.621
  HOMO = -0.29464222118404  LUMO = -0.0130619896180075
cycle= 3 E= -139.653195487805  delta_E= -0.117  |g|= 0.0879  |ddm|=  0.4
  HOMO = -0.296162134953583  LUMO = -0.0155386525299412
cycle= 4 E= -139.65453466872  delta_E= -0.00134  |g|= 0.0331  |ddm|= 0.0522
  HOMO = -0.295782890806592  LUMO = -0.0152401946344095
cycle= 5 E= -139.654725771008  delta_E= -0.000191  |g|= 0.00428  |ddm|= 0.014
  HOMO = -0.296180244266035  LUMO = -0.015270054306776
cycle= 6 E= -139.654728891143  delta_E= -3.12e-06  |g|= 0.000468  |ddm|= 0.00219
  HOMO = -0.296205045643475  LUMO = -0.0152717441840317
cycle= 7 E= -139.654728924125  delta_E= -3.3e-08  |g|= 3.99e-05  |ddm|= 0.000247
  HOMO = -0.296218464490133  LUMO = -0.015273307357607
Extra cycle  E= -139.654728923897  delta_E= 2.28e-10  |g|= 5.55e-05  |ddm|= 5.2e-05
converged SCF energy = -139.654728923897
