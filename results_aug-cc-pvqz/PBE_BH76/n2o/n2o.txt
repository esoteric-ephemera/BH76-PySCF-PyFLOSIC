#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/n2o/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 15:20:33 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 22
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N      0.000000000000   0.000000000000  -1.142726690000 AA    0.000000000000   0.000000000000  -2.159440479331 Bohr
[INPUT]  2 N      0.000000000000   0.000000000000  -0.022161590000 AA    0.000000000000   0.000000000000  -0.041879335585 Bohr
[INPUT]  3 O      0.000000000000   0.000000000000   1.164888280000 AA    0.000000000000   0.000000000000   2.201319814916 Bohr

nuclear repulsion = 60.9459711630959
number of shells = 57
number of NR pGTOs = 279
number of NR cGTOs = 240
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.33


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmpm6vegg5_
max_memory 4000 MB (current use 64 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ade52478940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ade524788b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 468048
init E= -185.157705623432
  HOMO = -0.326988333656232  LUMO = -0.0344067466755947
cycle= 1 E= -184.469008737743  delta_E= 0.689  |g|= 0.785  |ddm|= 1.53
  HOMO = -0.253667621369782  LUMO = -0.0696640174297046
cycle= 2 E= -183.373097932646  delta_E=  1.1  |g|= 2.58  |ddm|= 1.23
  HOMO = -0.308935736393771  LUMO = -0.0445498405605472
cycle= 3 E= -184.396481031253  delta_E= -1.02  |g|= 0.931  |ddm|= 1.09
  HOMO = -0.300173899091869  LUMO = -0.0508782643283137
cycle= 4 E= -184.564499367077  delta_E= -0.168  |g|= 0.26  |ddm|= 0.492
  HOMO = -0.311727267380669  LUMO = -0.0598513128543842
cycle= 5 E= -184.576507145038  delta_E= -0.012  |g|= 0.0363  |ddm|= 0.0876
  HOMO = -0.307636674845748  LUMO = -0.0549622849656527
cycle= 6 E= -184.576765103164  delta_E= -0.000258  |g|= 0.0107  |ddm|= 0.0179
  HOMO = -0.308856232594064  LUMO = -0.0557418817315054
cycle= 7 E= -184.576786201569  delta_E= -2.11e-05  |g|= 0.00208  |ddm|= 0.0043
  HOMO = -0.308801734982455  LUMO = -0.05562997019812
cycle= 8 E= -184.576787070461  delta_E= -8.69e-07  |g|= 0.000142  |ddm|= 0.00102
  HOMO = -0.308800097038382  LUMO = -0.055633424655664
cycle= 9 E= -184.576787075103  delta_E= -4.64e-09  |g|= 3.53e-05  |ddm|= 0.00013
  HOMO = -0.308800954285357  LUMO = -0.0556300899737529
Extra cycle  E= -184.576787070125  delta_E= 4.98e-09  |g|= 0.000161  |ddm|= 8.51e-05
converged SCF energy = -184.576787070125
