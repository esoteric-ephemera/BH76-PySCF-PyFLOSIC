#INFO: **** input file is /home/tuf53878/BH76/PBE_BH76/hco/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e069', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 15:10:29 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 15
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H     -0.608610630000   0.821034380000   0.000000000000 AA   -1.150107407199   1.551530117052   0.000000000000 Bohr
[INPUT]  2 C      0.304305320000   0.177798260000   0.000000000000 AA    0.575053713048   0.335990016824   0.000000000000 Bohr
[INPUT]  3 O      0.304305320000  -0.998832640000   0.000000000000 AA    0.575053713048  -1.887520133876   0.000000000000 Bohr

nuclear repulsion = 26.50984657439
number of shells = 52
number of NR pGTOs = 234
number of NR cGTOs = 206
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.34


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444416/tmpmzxcytjh
max_memory 4000 MB (current use 62 MB)
number electrons alpha = 8  beta = 7
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = GGA_X_PBE, GGA_C_PBE
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b10990da940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b10990da8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 482664
init E= -113.941810397511
  alpha nocc = 8  HOMO = -0.179050843226211  LUMO = -0.111963921374588
  beta  nocc = 7  HOMO = -0.437119374823615  LUMO = -0.179050843226214

WARN: system HOMO -0.179050843226214 >= system LUMO -0.179050843226214

cycle= 1 E= -113.695123632184  delta_E= 0.247  |g|= 0.485  |ddm|= 0.862
  alpha nocc = 8  HOMO = -0.0976845337310764  LUMO = -0.0288781995250708
  beta  nocc = 7  HOMO = -0.254125549786295  LUMO = -0.0628027623278288
cycle= 2 E= -112.72752213921  delta_E= 0.968  |g|= 1.57  |ddm|= 0.748
  alpha nocc = 8  HOMO = -0.163253687296741  LUMO = -0.084762132641548
  beta  nocc = 7  HOMO = -0.341570498793212  LUMO = -0.105629806035588
cycle= 3 E= -113.778711875429  delta_E= -1.05  |g|= 0.0772  |ddm|= 0.598
  alpha nocc = 8  HOMO = -0.188816082582982  LUMO = -0.109008998372225
  beta  nocc = 7  HOMO = -0.365497406081942  LUMO = -0.127676399080709
cycle= 4 E= -113.780373803382  delta_E= -0.00166  |g|= 0.0372  |ddm|= 0.0797
  alpha nocc = 8  HOMO = -0.18032717565864  LUMO = -0.0996989843737076
  beta  nocc = 7  HOMO = -0.35513298258573  LUMO = -0.118267439041385
cycle= 5 E= -113.781061854958  delta_E= -0.000688  |g|= 0.00461  |ddm|= 0.0261
  alpha nocc = 8  HOMO = -0.180240646434938  LUMO = -0.0996414999756192
  beta  nocc = 7  HOMO = -0.355421944253702  LUMO = -0.117722255796791
cycle= 6 E= -113.781071912438  delta_E= -1.01e-05  |g|= 0.000861  |ddm|= 0.00411
  alpha nocc = 8  HOMO = -0.180448089297944  LUMO = -0.0997572275205629
  beta  nocc = 7  HOMO = -0.355535689686183  LUMO = -0.117731042678501
cycle= 7 E= -113.78107220423  delta_E= -2.92e-07  |g|= 0.000155  |ddm|= 0.000715
  alpha nocc = 8  HOMO = -0.180446123694051  LUMO = -0.09974178833712
  beta  nocc = 7  HOMO = -0.355511540845831  LUMO = -0.117713697435621
cycle= 8 E= -113.78107221612  delta_E= -1.19e-08  |g|= 3.8e-05  |ddm|= 0.000106
  alpha nocc = 8  HOMO = -0.180451201913504  LUMO = -0.0997495324943566
  beta  nocc = 7  HOMO = -0.355516908606647  LUMO = -0.117719188240732
Extra cycle  E= -113.781072216008  delta_E= 1.12e-10  |g|= 4.6e-05  |ddm|= 4.63e-05
converged SCF energy = -113.781072216008  <S^2> = 0.75236743  2S+1 = 2.002366
