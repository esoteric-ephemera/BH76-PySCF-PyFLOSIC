#INFO: **** input file is /home/tuf53878/BH76/HF_BH76/C5H8/run_single_point.py ****
import numpy as np
from pyscf import gto,scf

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile','checkfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'verbose': 4, 'restricted': False, 'ecp' : {},
        'checkfile' : './wvfn'
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        hfcalc = scf.RHF(mol)
    else:
        hfcalc = scf.UHF(mol)

    hfcalc.chkfile = dopts['checkfile']
    hfcalc.max_cycle = dopts['max_cycle']
    hfcalc.conv_tol = dopts['tol']

    if 'levelshift' in dopts:
        hfcalc.level_shift = dopts['levelshift']

    e0 = hfcalc.kernel()

    odict = {
        'Etot': hfcalc.e_tot, 'Converged': hfcalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',hfcalc.mo_energy)
    np.save('./orbital_occupancies.npy',hfcalc.mo_occ)
    np.save('./orbital_coefficients.npy',hfcalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e066', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:01:13 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 13
[INPUT] num. electrons = 38
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -1.955622110000  -0.539540900000   0.000008050000 AA   -3.695590191044  -1.019584534001   0.000015212295 Bohr
[INPUT]  2 C     -1.131084580000   0.713180400000   0.000050050000 AA   -2.137440079919   1.347715633408   0.000094580793 Bohr
[INPUT]  3 C      0.205648370000   0.807008820000   0.000027050000 AA    0.388619097263   1.525025649908   0.000051117092 Bohr
[INPUT]  4 C      1.157569980000  -0.301674140000  -0.000042950000 AA    2.187490232218  -0.570081503464  -0.000081163737 Bohr
[INPUT]  5 C      2.483598200000  -0.126203200000  -0.000034950000 AA    4.693320401463  -0.238489484044  -0.000066045928 Bohr
[INPUT]  6 H     -2.605070760000  -0.568862610000   0.877133510000 AA   -4.922870271513  -1.074994535405   1.657542108578 Bohr
[INPUT]  7 H     -2.605113090000  -0.568772650000  -0.877089070000 AA   -4.922950263619  -1.074824535643  -1.657458129149 Bohr
[INPUT]  8 H     -1.351317560000  -1.443349180000  -0.000053950000 AA   -2.553620095716  -2.727534652316  -0.000101950724 Bohr
[INPUT]  9 H     -1.693652910000   1.640320110000   0.000104050000 AA   -3.200540149973   3.099755764516   0.000196626003 Bohr
[INPUT] 10 H      0.645770910000   1.798374770000   0.000065050000 AA    1.220330159111   3.398435784628   0.000122926684 Bohr
[INPUT] 11 H      0.765275010000  -1.310509820000  -0.000103950000 AA    1.446160178874  -2.476504643353  -0.000196437031 Bohr
[INPUT] 12 H      3.164707530000  -0.964988820000  -0.000086950000 AA    5.980430496049  -1.823564583067  -0.000164311687 Bohr
[INPUT] 13 H      2.919291000000   0.865017230000   0.000024050000 AA    5.516660467908   1.634645657730   0.000045447913 Bohr

nuclear repulsion = 155.815138492485
number of shells = 207
number of NR pGTOs = 849
number of NR cGTOs = 768
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.34


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = ../HF_WVFN/C5H8_wvfn
max_memory 4000 MB (current use 56 MB)
Set gradient conv threshold to 0.000316228
init E= -194.907508242541
  HOMO = -0.214073248316277  LUMO = 0.00490683218905697
cycle= 1 E= -193.982723938843  delta_E= 0.925  |g|= 0.378  |ddm|= 2.61
  HOMO = -0.323139121427994  LUMO = 0.0253191376471591
cycle= 2 E= -194.035030726394  delta_E= -0.0523  |g|= 0.107  |ddm|= 0.531
  HOMO = -0.306385346277802  LUMO = 0.0270739288996004
cycle= 3 E= -194.039549294218  delta_E= -0.00452  |g|= 0.0392  |ddm|= 0.197
  HOMO = -0.312882164456691  LUMO = 0.0266383716840238
cycle= 4 E= -194.04001188667  delta_E= -0.000463  |g|= 0.00833  |ddm|= 0.0494
  HOMO = -0.313428912818245  LUMO = 0.0267019947345723
cycle= 5 E= -194.04003776656  delta_E= -2.59e-05  |g|= 0.00212  |ddm|= 0.0119
  HOMO = -0.313150189170944  LUMO = 0.0267003748224401
cycle= 6 E= -194.040040229277  delta_E= -2.46e-06  |g|= 0.000692  |ddm|= 0.0037
  HOMO = -0.313270864364086  LUMO = 0.0267093592180715
cycle= 7 E= -194.04004048329  delta_E= -2.54e-07  |g|= 0.000148  |ddm|= 0.00133
  HOMO = -0.313286188631328  LUMO = 0.0267105375361341
cycle= 8 E= -194.040040503041  delta_E= -1.98e-08  |g|= 7.19e-05  |ddm|= 0.000307
  HOMO = -0.3132861957326  LUMO = 0.0267116539969966
Extra cycle  E= -194.040040505751  delta_E= -2.71e-09  |g|= 3.59e-05  |ddm|= 0.00011
converged SCF energy = -194.040040505751
