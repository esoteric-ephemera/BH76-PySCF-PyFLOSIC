#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/RKT14/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 15:05:20 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 2
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.000000000000   0.000000000000  -0.092564570000 AA    0.000000000000   0.000000000000  -0.174921686138 Bohr
[INPUT]  2 O      0.000000000000   0.000000000000   1.096748070000 AA    0.000000000000   0.000000000000   2.072553479945 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000  -1.004183500000 AA    0.000000000000   0.000000000000  -1.897631793807 Bohr

nuclear repulsion = 6.15504992898095
number of shells = 47
number of NR pGTOs = 189
number of NR cGTOs = 172
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.26


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp82y70j1f
max_memory 4000 MB (current use 64 MB)
number electrons alpha = 6  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2af93da46940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2af93da468b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 501816
init E= -76.0609113307666
  alpha nocc = 6  HOMO = -0.265150948095014  LUMO = 0.0230475877746283

WARN: beta  nocc = 4  HOMO -0.361814644835238 >= LUMO -0.361814644835234


WARN: system HOMO -0.265150948095019 >= system LUMO -0.361814644835234

cycle= 1 E= -76.1983062060897  delta_E= -0.137  |g|= 0.246  |ddm|= 0.633
  alpha nocc = 6  HOMO = -0.226088860956936  LUMO = 0.0336112887648266
  beta  nocc = 4  HOMO = -0.191565923265355  LUMO = -0.162094137605334
cycle= 2 E= -76.1434137649404  delta_E= 0.0549  |g|= 0.427  |ddm|= 0.424
  alpha nocc = 6  HOMO = -0.31782217932247  LUMO = 0.0272580633347276
  beta  nocc = 4  HOMO = -0.291141032792066  LUMO = -0.211955740963575
cycle= 3 E= -76.2284996899785  delta_E= -0.0851  |g|= 0.0449  |ddm|= 0.243
  alpha nocc = 6  HOMO = -0.309211344883379  LUMO = 0.0300447848601793
  beta  nocc = 4  HOMO = -0.278136076787198  LUMO = -0.190396565127839
cycle= 4 E= -76.2294677498393  delta_E= -0.000968  |g|= 0.0114  |ddm|= 0.053
  alpha nocc = 6  HOMO = -0.31362387280067  LUMO = 0.0300280998726297
  beta  nocc = 4  HOMO = -0.280696078690561  LUMO = -0.192794284505401
cycle= 5 E= -76.2295254592491  delta_E= -5.77e-05  |g|= 0.00306  |ddm|= 0.0101
  alpha nocc = 6  HOMO = -0.313557433755266  LUMO = 0.0300629760125067
  beta  nocc = 4  HOMO = -0.280098730943218  LUMO = -0.192654329143048
cycle= 6 E= -76.2295306445433  delta_E= -5.19e-06  |g|= 0.000517  |ddm|= 0.00355
  alpha nocc = 6  HOMO = -0.313399486730002  LUMO = 0.0300709673915892
  beta  nocc = 4  HOMO = -0.280025185700438  LUMO = -0.192639617509016
cycle= 7 E= -76.2295307866792  delta_E= -1.42e-07  |g|= 0.000129  |ddm|= 0.000877
  alpha nocc = 6  HOMO = -0.313425742465503  LUMO = 0.0300749654144324
  beta  nocc = 4  HOMO = -0.280044186443892  LUMO = -0.192662193013881
cycle= 8 E= -76.2295307949334  delta_E= -8.25e-09  |g|= 3.02e-05  |ddm|= 0.000219
  alpha nocc = 6  HOMO = -0.313425181413246  LUMO = 0.0300741034987452
  beta  nocc = 4  HOMO = -0.280056287109312  LUMO = -0.19267382588715
Extra cycle  E= -76.2295307957459  delta_E= -8.13e-10  |g|= 3.57e-05  |ddm|= 7.48e-05
converged SCF energy = -76.2295307957459  <S^2> = 2.0143648  2S+1 = 3.0095613
