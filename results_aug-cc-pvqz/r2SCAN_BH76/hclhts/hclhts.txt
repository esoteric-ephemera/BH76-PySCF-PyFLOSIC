#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/hclhts/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:40:28 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 19
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.000000000000   0.000000000000   1.485802710000 AA    0.000000000000   0.000000000000   2.807760197037 Bohr
[INPUT]  2 Cl     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000  -1.485802710000 AA    0.000000000000   0.000000000000  -2.807760197037 Bohr

nuclear repulsion = 12.2873741270401
number of shells = 47
number of NR pGTOs = 208
number of NR cGTOs = 176
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.32


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmph006r04t
max_memory 4000 MB (current use 66 MB)
number electrons alpha = 10  beta = 9
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b0fe161b940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b0fe161b8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 491376
init E= -461.259255601159
  alpha nocc = 10  HOMO = -0.180766079856997  LUMO = 0.00193540313465451
  beta  nocc = 9  HOMO = -0.355045853996314  LUMO = -0.180766079856993

WARN: system HOMO -0.180766079856993 >= system LUMO -0.180766079856993

cycle= 1 E= -461.269849189125  delta_E= -0.0106  |g|= 0.124  |ddm|= 0.835
  alpha nocc = 10  HOMO = -0.227233360387606  LUMO = -0.0174494532257673
  beta  nocc = 9  HOMO = -0.279554622887811  LUMO = -0.125179389279745
cycle= 2 E= -461.274292837326  delta_E= -0.00444  |g|= 0.118  |ddm|= 0.285
  alpha nocc = 10  HOMO = -0.235539518903875  LUMO = -0.027653217117198
  beta  nocc = 9  HOMO = -0.319915322123529  LUMO = -0.128841822176387
cycle= 3 E= -461.281473323362  delta_E= -0.00718  |g|= 0.0279  |ddm|= 0.125
  alpha nocc = 10  HOMO = -0.232983662126458  LUMO = -0.0214689918837321
  beta  nocc = 9  HOMO = -0.311512430107  LUMO = -0.115971141733711
cycle= 4 E= -461.281840918745  delta_E= -0.000368  |g|= 0.00773  |ddm|= 0.0297
  alpha nocc = 10  HOMO = -0.234958673907444  LUMO = -0.022045793041543
  beta  nocc = 9  HOMO = -0.312827555285259  LUMO = -0.114829343504736
cycle= 5 E= -461.281867581275  delta_E= -2.67e-05  |g|= 0.000512  |ddm|= 0.00867
  alpha nocc = 10  HOMO = -0.234861036925058  LUMO = -0.0217980671424744
  beta  nocc = 9  HOMO = -0.312711104232413  LUMO = -0.114688013888871
cycle= 6 E= -461.281867761034  delta_E= -1.8e-07  |g|= 6.04e-05  |ddm|= 0.00144
  alpha nocc = 10  HOMO = -0.234860732115086  LUMO = -0.0217875616635219
  beta  nocc = 9  HOMO = -0.312704907716718  LUMO = -0.114688519736282
cycle= 7 E= -461.281867762727  delta_E= -1.69e-09  |g|= 1.42e-05  |ddm|= 0.00024
  alpha nocc = 10  HOMO = -0.234861442983653  LUMO = -0.0217881370403131
  beta  nocc = 9  HOMO = -0.312708773510307  LUMO = -0.114688560355801
Extra cycle  E= -461.281867762769  delta_E= -4.29e-11  |g|= 8.96e-06  |ddm|= 2.77e-05
converged SCF energy = -461.281867762769  <S^2> = 0.7675054  2S+1 = 2.0174295
