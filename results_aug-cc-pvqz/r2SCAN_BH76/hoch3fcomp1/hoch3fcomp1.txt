#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/hoch3fcomp1/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:54:08 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 28
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.703486420000  -0.157457980000  -0.000016060000 AA   -1.329396666151  -0.297552458327  -0.000030349002 Bohr
[INPUT]  2 O      0.117288130000   0.960081290000   0.000071940000 AA    0.221642443362   1.814290695419   0.000135946897 Bohr
[INPUT]  3 H     -1.757411700000   0.151828130000  -0.008621090000 AA   -3.321026801106   0.286913583705  -0.016291498995 Bohr
[INPUT]  4 H     -0.546341940000  -0.803761730000  -0.878082910000 AA   -1.032436636964  -1.518889539107  -1.659336214561 Bohr
[INPUT]  5 H     -0.558666480000  -0.795453650000   0.886379250000 AA   -1.055726642175  -1.503189543286   1.675014024997 Bohr
[INPUT]  6 H      1.105091660000   0.603220560000   0.000260940000 AA    2.088320579941   1.139921651107   0.000493105135 Bohr
[INPUT]  7 F      2.343526760000   0.041543360000   0.000007940000 AA    4.428623741989   0.078505572694   0.000015004425 Bohr

nuclear repulsion = 73.1739235558926
number of shells = 113
number of NR pGTOs = 471
number of NR cGTOs = 424
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.29


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmpgm80ry7z
max_memory 4000 MB (current use 60 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2af2d2724940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2af2d27248b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 1161880
init E= -215.441841434431
  HOMO = -0.351015066569704  LUMO = -0.00842520705096527
cycle= 1 E= -215.40715919468  delta_E= 0.0347  |g|= 1.05  |ddm|= 1.39
  HOMO = 0.151847802082876  LUMO = 0.168074629149457
cycle= 2 E= -203.732403361086  delta_E= 11.7  |g|= 3.92  |ddm|=  891
  HOMO = -0.0372768704214416  LUMO = 0.0977765474778825
cycle= 3 E= -215.447053136664  delta_E= -11.7  |g|= 0.931  |ddm|=  891
  HOMO = -0.0678195150382498  LUMO = 0.113015931341624
cycle= 4 E= -215.606894836789  delta_E= -0.16  |g|= 0.259  |ddm|= 0.564
  HOMO = -0.0238626020555658  LUMO = 0.112603677941137
cycle= 5 E= -215.606987737944  delta_E= -9.29e-05  |g|= 0.235  |ddm|= 0.201
  HOMO = -0.015395744782931  LUMO = 0.112414023153116
cycle= 6 E= -215.615727401623  delta_E= -0.00874  |g|= 0.017  |ddm|= 0.17
  HOMO = -0.0169154820425693  LUMO = 0.111687257789456
cycle= 7 E= -215.615771015402  delta_E= -4.36e-05  |g|= 0.00743  |ddm|= 0.0194
  HOMO = -0.0176492515002421  LUMO = 0.111504942647515
cycle= 8 E= -215.615781444554  delta_E= -1.04e-05  |g|= 0.00173  |ddm|= 0.00792
  HOMO = -0.0178745520162199  LUMO = 0.111416984732102
cycle= 9 E= -215.615782117915  delta_E= -6.73e-07  |g|= 0.000238  |ddm|= 0.00267
  HOMO = -0.0178894853669075  LUMO = 0.111410522276864
cycle= 10 E= -215.615782125338  delta_E= -7.42e-09  |g|= 0.00018  |ddm|= 0.000853
  HOMO = -0.0179321345195986  LUMO = 0.111408415774915
Extra cycle  E= -215.615782104361  delta_E= 2.1e-08  |g|= 0.000423  |ddm|= 0.000551
converged SCF energy = -215.615782104361
