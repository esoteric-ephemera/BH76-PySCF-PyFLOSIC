#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/PH2/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:14:12 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 17
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 P      0.000000000000   0.000000000000   0.655389550000 AA    0.000000000000   0.000000000000   1.238506754402 Bohr
[INPUT]  2 H     -1.020132020000   0.000000000000  -0.327694780000 AA   -1.927770128699   0.000000000000  -0.619253386650 Bohr
[INPUT]  3 H      1.020132020000   0.000000000000  -0.327694780000 AA    1.927770128699   0.000000000000  -0.619253386650 Bohr

nuclear repulsion = 11.4649710254017
number of shells = 47
number of NR pGTOs = 208
number of NR cGTOs = 176
basis = aug-cc-pvqz
ecp = {}
CPU time:         1.87


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp6o4hfm8i
max_memory 4000 MB (current use 60 MB)
number electrons alpha = 9  beta = 8
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b9df1708940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b9df17088b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 491376
init E= -342.352818591874
  alpha nocc = 9  HOMO = -0.216401908931916  LUMO = -0.0196958365645449
  beta  nocc = 8  HOMO = -0.310337747997188  LUMO = -0.216401908931917

WARN: system HOMO -0.216401908931917 >= system LUMO -0.216401908931917

cycle= 1 E= -342.489326370822  delta_E= -0.137  |g|= 0.0846  |ddm|= 0.888
  alpha nocc = 9  HOMO = -0.227081442981399  LUMO = 0.00164372699281254
  beta  nocc = 8  HOMO = -0.264211440151759  LUMO = -0.138085491421438
cycle= 2 E= -342.493921770602  delta_E= -0.0046  |g|= 0.0205  |ddm|= 0.209
  alpha nocc = 9  HOMO = -0.239826596555431  LUMO = -0.00161282646683328
  beta  nocc = 8  HOMO = -0.276148787168897  LUMO = -0.14086367816516
cycle= 3 E= -342.494229501702  delta_E= -0.000308  |g|= 0.00934  |ddm|= 0.0421
  alpha nocc = 9  HOMO = -0.236929354925341  LUMO = -0.000155151765964896
  beta  nocc = 8  HOMO = -0.273277631151443  LUMO = -0.134658015953864
cycle= 4 E= -342.494291010645  delta_E= -6.15e-05  |g|= 0.00351  |ddm|= 0.0154
  alpha nocc = 9  HOMO = -0.237707900809699  LUMO = -0.00021057624009113
  beta  nocc = 8  HOMO = -0.273579180750873  LUMO = -0.134752975900128
cycle= 5 E= -342.494295711322  delta_E= -4.7e-06  |g|= 0.00073  |ddm|= 0.00678
  alpha nocc = 9  HOMO = -0.237581560295387  LUMO = -0.00022269945543441
  beta  nocc = 8  HOMO = -0.273401866131331  LUMO = -0.134559601374186
cycle= 6 E= -342.494296049729  delta_E= -3.38e-07  |g|= 0.000289  |ddm|= 0.00124
  alpha nocc = 9  HOMO = -0.237608836009534  LUMO = -0.000230749496527162
  beta  nocc = 8  HOMO = -0.273465174918644  LUMO = -0.134559036261645
cycle= 7 E= -342.494296127792  delta_E= -7.81e-08  |g|= 2.91e-05  |ddm|= 0.000617
  alpha nocc = 9  HOMO = -0.237611117188489  LUMO = -0.000230481284330486
  beta  nocc = 8  HOMO = -0.273466301190741  LUMO = -0.13455882146116
Extra cycle  E= -342.494296128393  delta_E= -6.01e-10  |g|= 1.02e-05  |ddm|= 7.07e-05
converged SCF energy = -342.494296128393  <S^2> = 0.76035285  2S+1 = 2.0103262
