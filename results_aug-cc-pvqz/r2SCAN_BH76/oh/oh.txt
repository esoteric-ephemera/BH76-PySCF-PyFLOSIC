#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/oh/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 18:12:38 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O      0.000000000000   0.000000000000   0.484448280000 AA    0.000000000000   0.000000000000   0.915474570717 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.484448280000 AA    0.000000000000   0.000000000000  -0.915474570717 Bohr

nuclear repulsion = 4.3693185239093
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.14


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp2jwkafp6
max_memory 4000 MB (current use 60 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ba8c12c6940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ba8c12c68b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 329600
init E= -75.6493910625174
  alpha nocc = 5  HOMO = -0.380037086733197  LUMO = -0.00420458561387157

WARN: beta  nocc = 4  HOMO -0.380037086733202 >= LUMO -0.380037086733198


WARN: system HOMO -0.380037086733198 >= system LUMO -0.380037086733198

cycle= 1 E= -75.7075485019358  delta_E= -0.0582  |g|= 0.269  |ddm|= 0.488
  alpha nocc = 5  HOMO = -0.227469469165698  LUMO = 0.000339890295184037
  beta  nocc = 4  HOMO = -0.203507639780353  LUMO = -0.135136641696898
cycle= 2 E= -75.6895092482303  delta_E= 0.018  |g|= 0.35  |ddm|= 0.267
  alpha nocc = 5  HOMO = -0.318667849511194  LUMO = -0.0068573065410606
  beta  nocc = 4  HOMO = -0.294030383096759  LUMO = -0.214937729933416
cycle= 3 E= -75.7340425520343  delta_E= -0.0445  |g|= 0.0349  |ddm|= 0.17
  alpha nocc = 5  HOMO = -0.307612203014895  LUMO = -0.00349530723513229
  beta  nocc = 4  HOMO = -0.283657710536428  LUMO = -0.197631077070062
cycle= 4 E= -75.7344646776874  delta_E= -0.000422  |g|= 0.00679  |ddm|= 0.0156
  alpha nocc = 5  HOMO = -0.309174079594626  LUMO = -0.00398221409094143
  beta  nocc = 4  HOMO = -0.284833777248587  LUMO = -0.198222469902225
cycle= 5 E= -75.7344818094505  delta_E= -1.71e-05  |g|= 0.000915  |ddm|= 0.00313
  alpha nocc = 5  HOMO = -0.309297961531463  LUMO = -0.00391445217564015
  beta  nocc = 4  HOMO = -0.284600369339634  LUMO = -0.198043044972068
cycle= 6 E= -75.7344827150209  delta_E= -9.06e-07  |g|= 0.000226  |ddm|= 0.00108
  alpha nocc = 5  HOMO = -0.309344849054782  LUMO = -0.00389392142182311
  beta  nocc = 4  HOMO = -0.284545998245602  LUMO = -0.198008476848192
cycle= 7 E= -75.7344827820631  delta_E= -6.7e-08  |g|= 4.64e-05  |ddm|= 0.00034
  alpha nocc = 5  HOMO = -0.309351063966851  LUMO = -0.00389503460392316
  beta  nocc = 4  HOMO = -0.284552790923377  LUMO = -0.198016941249536
Extra cycle  E= -75.7344827861973  delta_E= -4.13e-09  |g|= 3.91e-05  |ddm|= 7.65e-05
converged SCF energy = -75.7344827861973  <S^2> = 0.75401413  2S+1 = 2.0040101
