#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/f/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:16:50 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 1
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 F      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr

nuclear repulsion = 0
number of shells = 19
number of NR pGTOs = 93
number of NR cGTOs = 80
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.17


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmpz5jthj9s
max_memory 4000 MB (current use 62 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ac2c1fc4940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ac2c1fc48b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 162568
init E= -99.6773148021149
  alpha nocc = 5  HOMO = -0.434786275183499  LUMO = 0.0990113525529434

WARN: beta  nocc = 4  HOMO -0.434786275183501 >= LUMO -0.434786275183498


WARN: system HOMO -0.434786275183498 >= system LUMO -0.434786275183498

cycle= 1 E= -99.7253755601431  delta_E= -0.0481  |g|= 0.16  |ddm|= 0.39
  alpha nocc = 5  HOMO = -0.422416504117812  LUMO = 0.102190213433323
  beta  nocc = 4  HOMO = -0.391823730070266  LUMO = -0.306158397449238
cycle= 2 E= -99.730737416401  delta_E= -0.00536  |g|= 0.0221  |ddm|= 0.0467
  alpha nocc = 5  HOMO = -0.431858986194487  LUMO = 0.102412347363729
  beta  nocc = 4  HOMO = -0.402497428374295  LUMO = -0.303481775323831
cycle= 3 E= -99.7308223439254  delta_E= -8.49e-05  |g|= 0.0173  |ddm|= 0.0128
  alpha nocc = 5  HOMO = -0.425446398183696  LUMO = 0.103585641578294
  beta  nocc = 4  HOMO = -0.395863846229487  LUMO = -0.296910087734493
cycle= 4 E= -99.7308965452282  delta_E= -7.42e-05  |g|= 0.00371  |ddm|= 0.00655
  alpha nocc = 5  HOMO = -0.426576225305042  LUMO = 0.10352175155098
  beta  nocc = 4  HOMO = -0.39663114928334  LUMO = -0.297586634768774
cycle= 5 E= -99.7309005303296  delta_E= -3.99e-06  |g|= 0.000281  |ddm|= 0.00137
  alpha nocc = 5  HOMO = -0.42665814707273  LUMO = 0.103550441645869
  beta  nocc = 4  HOMO = -0.396577315933723  LUMO = -0.297547789468095
cycle= 6 E= -99.7309006013147  delta_E= -7.1e-08  |g|= 4.56e-05  |ddm|= 0.000309
  alpha nocc = 5  HOMO = -0.42666183025991  LUMO = 0.103553649429206
  beta  nocc = 4  HOMO = -0.39657441221535  LUMO = -0.297548047360619
Extra cycle  E= -99.7309006054369  delta_E= -4.12e-09  |g|= 4.17e-05  |ddm|= 7.79e-05
converged SCF energy = -99.7309006054369  <S^2> = 0.75265239  2S+1 = 2.0026506
