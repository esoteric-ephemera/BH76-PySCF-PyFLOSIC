#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/NH/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:12:00 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 8
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 2
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N      0.000000000000   0.000000000000   0.518366690000 AA    0.000000000000   0.000000000000   0.979571076197 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.518366690000 AA    0.000000000000   0.000000000000  -0.979571076197 Bohr

nuclear repulsion = 3.57299238926791
number of shells = 33
number of NR pGTOs = 141
number of NR cGTOs = 126
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.32


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmpdc0wn6a4
max_memory 4000 MB (current use 66 MB)
number electrons alpha = 5  beta = 3
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ae48471a940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ae48471a8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 327548
init E= -55.0632074631304
  alpha nocc = 5  HOMO = -0.235059947512133  LUMO = 0.0200760849554952
  beta  nocc = 3  HOMO = -0.367047984251915  LUMO = -0.235059947512134

WARN: system HOMO -0.235059947512133 >= system LUMO -0.235059947512134

cycle= 1 E= -55.2067963923215  delta_E= -0.144  |g|= 0.147  |ddm|= 0.542
  alpha nocc = 5  HOMO = -0.330215680999779  LUMO = -0.00799504223801803
  beta  nocc = 3  HOMO = -0.339433782134644  LUMO = -0.155523026036119
cycle= 2 E= -55.2158813880006  delta_E= -0.00908  |g|= 0.0567  |ddm|= 0.11
  alpha nocc = 5  HOMO = -0.30149925432502  LUMO = 0.0010236998187231
  beta  nocc = 3  HOMO = -0.317956399862754  LUMO = -0.119181308749772
cycle= 3 E= -55.2168109849314  delta_E= -0.00093  |g|= 0.032  |ddm|= 0.0442
  alpha nocc = 5  HOMO = -0.314782089906612  LUMO = 0.00037493893777006
  beta  nocc = 3  HOMO = -0.328780412183753  LUMO = -0.127699787118906
cycle= 4 E= -55.2172477514899  delta_E= -0.000437  |g|= 0.00937  |ddm|= 0.0225
  alpha nocc = 5  HOMO = -0.313099253062039  LUMO = 0.000305748074560358
  beta  nocc = 3  HOMO = -0.326374918292095  LUMO = -0.125405608937137
cycle= 5 E= -55.2172936029086  delta_E= -4.59e-05  |g|= 0.000995  |ddm|= 0.00756
  alpha nocc = 5  HOMO = -0.313218260152096  LUMO = 0.000288931943724942
  beta  nocc = 3  HOMO = -0.326255005194202  LUMO = -0.125321671243291
cycle= 6 E= -55.2172947211386  delta_E= -1.12e-06  |g|= 0.000207  |ddm|= 0.00196
  alpha nocc = 5  HOMO = -0.31318755069868  LUMO = 0.000306775174954193
  beta  nocc = 3  HOMO = -0.32620947930463  LUMO = -0.125298259694702
cycle= 7 E= -55.2172947680631  delta_E= -4.69e-08  |g|= 3.85e-05  |ddm|= 0.000442
  alpha nocc = 5  HOMO = -0.313201585944929  LUMO = 0.000306351573028472
  beta  nocc = 3  HOMO = -0.326219843961719  LUMO = -0.125312084378957
Extra cycle  E= -55.2172947693708  delta_E= -1.31e-09  |g|= 2e-05  |ddm|= 6.35e-05
converged SCF energy = -55.2172947693708  <S^2> = 2.0091243  2S+1 = 3.0060767
