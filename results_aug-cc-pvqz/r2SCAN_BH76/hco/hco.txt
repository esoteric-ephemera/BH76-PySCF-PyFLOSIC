#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/hco/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:42:21 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 15
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H     -0.608610630000   0.821034380000   0.000000000000 AA   -1.150107407199   1.551530117052   0.000000000000 Bohr
[INPUT]  2 C      0.304305320000   0.177798260000   0.000000000000 AA    0.575053713048   0.335990016824   0.000000000000 Bohr
[INPUT]  3 O      0.304305320000  -0.998832640000   0.000000000000 AA    0.575053713048  -1.887520133876   0.000000000000 Bohr

nuclear repulsion = 26.50984657439
number of shells = 52
number of NR pGTOs = 234
number of NR cGTOs = 206
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.36


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmpk4g337xt
max_memory 4000 MB (current use 64 MB)
number electrons alpha = 8  beta = 7
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2afd1efbb940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2afd1efbb8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 482664
init E= -113.999606885589
  alpha nocc = 8  HOMO = -0.179896764160559  LUMO = -0.106701817496064
  beta  nocc = 7  HOMO = -0.454362457239288  LUMO = -0.179896764160558

WARN: system HOMO -0.179896764160558 >= system LUMO -0.179896764160558

cycle= 1 E= -113.765949118923  delta_E= 0.234  |g|= 0.466  |ddm|= 0.848
  alpha nocc = 8  HOMO = -0.113726454043178  LUMO = -0.0296605740626694
  beta  nocc = 7  HOMO = -0.273933939070133  LUMO = -0.0579481678940518
cycle= 2 E= -113.065455844869  delta_E=  0.7  |g|= 1.37  |ddm|= 0.721
  alpha nocc = 8  HOMO = -0.177640020975144  LUMO = -0.0759086410221267
  beta  nocc = 7  HOMO = -0.349153879861073  LUMO = -0.0919417628786461
cycle= 3 E= -113.844916360866  delta_E= -0.779  |g|= 0.0633  |ddm|= 0.53
  alpha nocc = 8  HOMO = -0.201278295323473  LUMO = -0.0967873867712684
  beta  nocc = 7  HOMO = -0.37029917155618  LUMO = -0.108977216916518
cycle= 4 E= -113.846052933023  delta_E= -0.00114  |g|= 0.0267  |ddm|= 0.0641
  alpha nocc = 8  HOMO = -0.194795691536382  LUMO = -0.088765684126887
  beta  nocc = 7  HOMO = -0.361688748651162  LUMO = -0.100114815386136
cycle= 5 E= -113.846399187571  delta_E= -0.000346  |g|= 0.00485  |ddm|= 0.0204
  alpha nocc = 8  HOMO = -0.195280318781235  LUMO = -0.0889736198466165
  beta  nocc = 7  HOMO = -0.36211313890502  LUMO = -0.0994247127880703
cycle= 6 E= -113.846410157262  delta_E= -1.1e-05  |g|= 0.000931  |ddm|= 0.00472
  alpha nocc = 8  HOMO = -0.19551031043526  LUMO = -0.0890400720557841
  beta  nocc = 7  HOMO = -0.362052448265787  LUMO = -0.0992563849967394
cycle= 7 E= -113.846410694982  delta_E= -5.38e-07  |g|= 0.000237  |ddm|= 0.0017
  alpha nocc = 8  HOMO = -0.195513423893198  LUMO = -0.0890282484697969
  beta  nocc = 7  HOMO = -0.362020523986492  LUMO = -0.0992247305124241
cycle= 8 E= -113.846410727926  delta_E= -3.29e-08  |g|= 4.67e-05  |ddm|= 0.000387
  alpha nocc = 8  HOMO = -0.195512368865291  LUMO = -0.0890276128648717
  beta  nocc = 7  HOMO = -0.362023849490464  LUMO = -0.099224864471975
Extra cycle  E= -113.846410730355  delta_E= -2.43e-09  |g|= 2.56e-05  |ddm|= 6.15e-05
converged SCF energy = -113.846410730355  <S^2> = 0.7548208  2S+1 = 2.004815
