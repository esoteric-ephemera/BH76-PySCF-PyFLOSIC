#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/NH2/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:12:26 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N      0.000000000000   0.000000000000   0.424246340000 AA    0.000000000000   0.000000000000   0.801709391949 Bohr
[INPUT]  2 H     -0.802312090000   0.000000000000  -0.212123170000 AA   -1.516150116527   0.000000000000  -0.400854695975 Bohr
[INPUT]  3 H      0.802312090000   0.000000000000  -0.212123170000 AA    1.516150116527   0.000000000000  -0.400854695975 Bohr

nuclear repulsion = 7.56430015711315
number of shells = 47
number of NR pGTOs = 189
number of NR cGTOs = 172
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.12


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmpxbgifs1k
max_memory 4000 MB (current use 60 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2abb40116940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2abb401168b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 499764
init E= -55.7398300612604
  alpha nocc = 5  HOMO = -0.267230304844777  LUMO = 0.00338622211960348
  beta  nocc = 4  HOMO = -0.34565943912795  LUMO = -0.267230304844774

WARN: system HOMO -0.267230304844774 >= system LUMO -0.267230304844774

cycle= 1 E= -55.862465383349  delta_E= -0.123  |g|= 0.169  |ddm|= 0.57
  alpha nocc = 5  HOMO = -0.251164344732656  LUMO = -0.00145097453348165
  beta  nocc = 4  HOMO = -0.230232536207287  LUMO = -0.107481992964329
cycle= 2 E= -55.8612026752195  delta_E= 0.00126  |g|= 0.178  |ddm|= 0.178
  alpha nocc = 5  HOMO = -0.303607017153552  LUMO = -0.00574317007365647
  beta  nocc = 4  HOMO = -0.284586497040217  LUMO = -0.148090363449667
cycle= 3 E= -55.8751166429139  delta_E= -0.0139  |g|= 0.0383  |ddm|= 0.104
  alpha nocc = 5  HOMO = -0.295245264266501  LUMO = -0.00312726322817681
  beta  nocc = 4  HOMO = -0.276859768457273  LUMO = -0.132449673929708
cycle= 4 E= -55.8757196497004  delta_E= -0.000603  |g|= 0.00661  |ddm|= 0.0177
  alpha nocc = 5  HOMO = -0.296987124164637  LUMO = -0.00344993933525985
  beta  nocc = 4  HOMO = -0.276750269550772  LUMO = -0.132517662824724
cycle= 5 E= -55.8757401693653  delta_E= -2.05e-05  |g|= 0.000876  |ddm|= 0.00348
  alpha nocc = 5  HOMO = -0.296978450349778  LUMO = -0.00335130276759567
  beta  nocc = 4  HOMO = -0.276426409583365  LUMO = -0.132187542157202
cycle= 6 E= -55.8757411965166  delta_E= -1.03e-06  |g|= 0.000218  |ddm|= 0.00142
  alpha nocc = 5  HOMO = -0.297000023957488  LUMO = -0.00335114401328406
  beta  nocc = 4  HOMO = -0.27641641860273  LUMO = -0.132187371361416
cycle= 7 E= -55.8757412625465  delta_E= -6.6e-08  |g|= 3.06e-05  |ddm|= 0.000413
  alpha nocc = 5  HOMO = -0.297001956895205  LUMO = -0.00335039238228503
  beta  nocc = 4  HOMO = -0.276414503967065  LUMO = -0.132191075822284
Extra cycle  E= -55.8757412634947  delta_E= -9.48e-10  |g|= 1.11e-05  |ddm|= 4.83e-05
converged SCF energy = -55.8757412634947  <S^2> = 0.75532977  2S+1 = 2.0053227
