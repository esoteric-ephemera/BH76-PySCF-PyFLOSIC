#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/hfhts/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:50:15 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 11
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.000000000000   0.000000000000   1.137217780000 AA    0.000000000000   0.000000000000   2.149030148186 Bohr
[INPUT]  2 F      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000  -1.137217780000 AA    0.000000000000   0.000000000000  -2.149030148186 Bohr

nuclear repulsion = 8.60853441987163
number of shells = 47
number of NR pGTOs = 189
number of NR cGTOs = 172
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.63


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp1d2pd05t
max_memory 4000 MB (current use 64 MB)
number electrons alpha = 6  beta = 5
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b4181555940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b41815558b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 507000
init E= -100.891659984615
  alpha nocc = 6  HOMO = -0.124565057002414  LUMO = -0.0121396588493649
  beta  nocc = 5  HOMO = -0.476058225299407  LUMO = -0.124565057002413

WARN: system HOMO -0.124565057002413 >= system LUMO -0.124565057002413

cycle= 1 E= -100.879066659353  delta_E= 0.0126  |g|= 0.272  |ddm|= 0.767
  alpha nocc = 6  HOMO = -0.180724594079232  LUMO = -0.0367805745457665
  beta  nocc = 5  HOMO = -0.316257890457681  LUMO = -0.0711080368939947
cycle= 2 E= -100.836035458464  delta_E= 0.043  |g|= 0.488  |ddm|= 0.311
  alpha nocc = 6  HOMO = -0.193783342292827  LUMO = -0.0615863467908562
  beta  nocc = 5  HOMO = -0.419864758875689  LUMO = -0.0826710033641395
cycle= 3 E= -100.905211490616  delta_E= -0.0692  |g|= 0.015  |ddm|= 0.144
  alpha nocc = 6  HOMO = -0.188044069307161  LUMO = -0.0546936115444544
  beta  nocc = 5  HOMO = -0.413222096780918  LUMO = -0.0707906500742228
cycle= 4 E= -100.905381468031  delta_E= -0.00017  |g|= 0.0053  |ddm|= 0.029
  alpha nocc = 6  HOMO = -0.188833658995323  LUMO = -0.054449268076172
  beta  nocc = 5  HOMO = -0.413745912375765  LUMO = -0.0691680830255911
cycle= 5 E= -100.905403603043  delta_E= -2.21e-05  |g|= 0.000841  |ddm|= 0.01
  alpha nocc = 6  HOMO = -0.188726803186586  LUMO = -0.0541350809360705
  beta  nocc = 5  HOMO = -0.413539104297715  LUMO = -0.068973237963372
cycle= 6 E= -100.905404022211  delta_E= -4.19e-07  |g|= 0.000112  |ddm|= 0.00223
  alpha nocc = 6  HOMO = -0.18872491872064  LUMO = -0.0541233978609412
  beta  nocc = 5  HOMO = -0.413556012463854  LUMO = -0.0689665026722858
cycle= 7 E= -100.905404029642  delta_E= -7.43e-09  |g|= 1.25e-05  |ddm|= 0.000418
  alpha nocc = 6  HOMO = -0.188728849161547  LUMO = -0.0541269138713317
  beta  nocc = 5  HOMO = -0.413566350853284  LUMO = -0.0689680692099846
Extra cycle  E= -100.905404029743  delta_E= -1.01e-10  |g|= 9.01e-06  |ddm|= 7.16e-05
converged SCF energy = -100.905404029743  <S^2> = 0.76082354  2S+1 = 2.0107944
