#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/RKT01/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:15:50 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 19
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.000000000000   0.000000000000  -0.256615860000 AA    0.000000000000   0.000000000000  -0.484933694620 Bohr
[INPUT]  2 Cl     0.000000000000   0.000000000000   1.287264580000 AA    0.000000000000   0.000000000000   2.432577506053 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000  -1.030648720000 AA    0.000000000000   0.000000000000  -1.947643811434 Bohr

nuclear repulsion = 10.3916291213484
number of shells = 47
number of NR pGTOs = 208
number of NR cGTOs = 176
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.33


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp567ljmt7
max_memory 4000 MB (current use 77 MB)
number electrons alpha = 10  beta = 9
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b2e5c017940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b2e5c0178b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 491376
init E= -461.18195375933
  alpha nocc = 10  HOMO = -0.281612007760151  LUMO = 0.0140273852803936
  beta  nocc = 9  HOMO = -0.346801496598374  LUMO = -0.281612007760153

WARN: system HOMO -0.281612007760153 >= system LUMO -0.281612007760153

cycle= 1 E= -461.287250080096  delta_E= -0.105  |g|= 0.12  |ddm|= 0.816
  alpha nocc = 10  HOMO = -0.275915132987644  LUMO = 0.0222145586490722
  beta  nocc = 9  HOMO = -0.262987583875074  LUMO = -0.216658453169774
cycle= 2 E= -461.285228519482  delta_E= 0.00202  |g|= 0.139  |ddm|= 0.444
  alpha nocc = 10  HOMO = -0.307662441651309  LUMO = 0.0197183802727285
  beta  nocc = 9  HOMO = -0.302281130458911  LUMO = -0.228285539999767
cycle= 3 E= -461.297498786183  delta_E= -0.0123  |g|= 0.0283  |ddm|= 0.173
  alpha nocc = 10  HOMO = -0.308544003840225  LUMO = 0.020126885509316
  beta  nocc = 9  HOMO = -0.300318583601566  LUMO = -0.222031328992236
cycle= 4 E= -461.297899667048  delta_E= -0.000401  |g|= 0.0122  |ddm|= 0.0446
  alpha nocc = 10  HOMO = -0.308134338030333  LUMO = 0.020387756578594
  beta  nocc = 9  HOMO = -0.298997246053906  LUMO = -0.220090128290895
cycle= 5 E= -461.297973260164  delta_E= -7.36e-05  |g|= 0.0033  |ddm|= 0.011
  alpha nocc = 10  HOMO = -0.30895409547122  LUMO = 0.020324763231052
  beta  nocc = 9  HOMO = -0.299581661212242  LUMO = -0.22044011156948
cycle= 6 E= -461.297977583782  delta_E= -4.32e-06  |g|= 0.000672  |ddm|= 0.00396
  alpha nocc = 10  HOMO = -0.308751144660492  LUMO = 0.0203429106966071
  beta  nocc = 9  HOMO = -0.299353408586085  LUMO = -0.220226393186492
cycle= 7 E= -461.297977739647  delta_E= -1.56e-07  |g|= 0.000187  |ddm|= 0.000996
  alpha nocc = 10  HOMO = -0.308804666149338  LUMO = 0.0203286094176816
  beta  nocc = 9  HOMO = -0.299414922286927  LUMO = -0.220287147491314
cycle= 8 E= -461.297977753268  delta_E= -1.36e-08  |g|= 1.91e-05  |ddm|= 0.000406
  alpha nocc = 10  HOMO = -0.308798783775364  LUMO = 0.020328216861676
  beta  nocc = 9  HOMO = -0.299405841815337  LUMO = -0.220283005116595
Extra cycle  E= -461.297977753364  delta_E= -9.61e-11  |g|= 1.72e-05  |ddm|= 0.000141
converged SCF energy = -461.297977753364  <S^2> = 0.75852945  2S+1 = 2.0085113
