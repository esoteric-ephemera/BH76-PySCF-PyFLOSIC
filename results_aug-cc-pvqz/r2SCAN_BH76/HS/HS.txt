#INFO: **** input file is /home/tuf53878/BH76/r2SCAN_BH76/HS/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e067', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 14:09:28 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 2
[INPUT] num. electrons = 17
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 S      0.000000000000   0.000000000000   0.670101650000 AA    0.000000000000   0.000000000000   1.266308594119 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.670101650000 AA    0.000000000000   0.000000000000  -1.266308594119 Bohr

nuclear repulsion = 6.31757538182453
number of shells = 33
number of NR pGTOs = 160
number of NR cGTOs = 130
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.02


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444418/tmp_zh35eu_
max_memory 4000 MB (current use 60 MB)
number electrons alpha = 9  beta = 8
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_R2SCAN, MGGA_C_R2SCAN
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 8208 (2020)
    J. W. Furness, A. D. Kaplan, J. Ning, J. P. Perdew, and J. Sun, J. Phys. Chem. Lett. 11, 9248 (2020)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2af9e1e8e940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2af9e1e8e8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 319160
init E= -398.665369655388
  alpha nocc = 9  HOMO = -0.277731054497559  LUMO = -0.0157476265730451

WARN: beta  nocc = 8  HOMO -0.277731054497562 >= LUMO -0.277731054497561


WARN: system HOMO -0.277731054497561 >= system LUMO -0.277731054497561

cycle= 1 E= -398.728355409051  delta_E= -0.063  |g|= 0.094  |ddm|= 0.769
  alpha nocc = 9  HOMO = -0.238209477523614  LUMO = -0.00901635295862649
  beta  nocc = 8  HOMO = -0.221514414752713  LUMO = -0.191127639707523
cycle= 2 E= -398.732986496048  delta_E= -0.00463  |g|= 0.0505  |ddm|= 0.155
  alpha nocc = 9  HOMO = -0.2574057001094  LUMO = -0.0115238941844025
  beta  nocc = 8  HOMO = -0.242802675065843  LUMO = -0.203171716606306
cycle= 3 E= -398.734280089959  delta_E= -0.00129  |g|= 0.0295  |ddm|= 0.0847
  alpha nocc = 9  HOMO = -0.252612734573832  LUMO = -0.010672142537112
  beta  nocc = 8  HOMO = -0.239097562864697  LUMO = -0.194792667502711
cycle= 4 E= -398.734799370687  delta_E= -0.000519  |g|= 0.00492  |ddm|= 0.0331
  alpha nocc = 9  HOMO = -0.251137880484387  LUMO = -0.00993941155343969
  beta  nocc = 8  HOMO = -0.23775236835136  LUMO = -0.192816341597775
cycle= 5 E= -398.734813264586  delta_E= -1.39e-05  |g|= 0.00179  |ddm|= 0.00651
  alpha nocc = 9  HOMO = -0.251547953275758  LUMO = -0.0101303413065432
  beta  nocc = 8  HOMO = -0.238120825054937  LUMO = -0.193145230449543
cycle= 6 E= -398.734814610143  delta_E= -1.35e-06  |g|= 0.000286  |ddm|= 0.00202
  alpha nocc = 9  HOMO = -0.251501416587126  LUMO = -0.0101107755754496
  beta  nocc = 8  HOMO = -0.238046988828081  LUMO = -0.193063627454168
cycle= 7 E= -398.734814652062  delta_E= -4.19e-08  |g|= 6.77e-05  |ddm|= 0.000478
  alpha nocc = 9  HOMO = -0.251525431586805  LUMO = -0.0101223316566718
  beta  nocc = 8  HOMO = -0.23806784552035  LUMO = -0.193082148702624
Extra cycle  E= -398.734814653572  delta_E= -1.51e-09  |g|= 3.8e-05  |ddm|= 0.000117
converged SCF energy = -398.734814653572  <S^2> = 0.75815044  2S+1 = 2.0081339
