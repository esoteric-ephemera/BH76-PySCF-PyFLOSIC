#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/cl/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:08:37 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 1
[INPUT] num. electrons = 17
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Cl     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr

nuclear repulsion = 0
number of shells = 19
number of NR pGTOs = 112
number of NR cGTOs = 84
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.17


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpw9gjpkvk
max_memory 4000 MB (current use 62 MB)
number electrons alpha = 9  beta = 8
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b800c82a940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b800c82a8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 146944
init E= -460.152816409471
  alpha nocc = 9  HOMO = -0.340596066017585  LUMO = 0.0441274423478725

WARN: beta  nocc = 8  HOMO -0.340596066017585 >= LUMO -0.340596066017584


WARN: system HOMO -0.340596066017584 >= system LUMO -0.340596066017584

cycle= 1 E= -460.190839050508  delta_E= -0.038  |g|= 0.0958  |ddm|= 0.623
  alpha nocc = 9  HOMO = -0.323790448114086  LUMO = 0.0476363232650911
  beta  nocc = 8  HOMO = -0.304240734919641  LUMO = -0.27255036978436
cycle= 2 E= -460.195873551767  delta_E= -0.00503  |g|= 0.0185  |ddm|= 0.0968
  alpha nocc = 9  HOMO = -0.331182268284564  LUMO = 0.0466846375967076
  beta  nocc = 8  HOMO = -0.315042764279533  LUMO = -0.269734554251161
cycle= 3 E= -460.196063690653  delta_E= -0.00019  |g|= 0.00885  |ddm|= 0.0216
  alpha nocc = 9  HOMO = -0.325556908281807  LUMO = 0.0482265352409937
  beta  nocc = 8  HOMO = -0.309855994205303  LUMO = -0.26336824732154
cycle= 4 E= -460.196088923904  delta_E= -2.52e-05  |g|= 0.00541  |ddm|= 0.0129
  alpha nocc = 9  HOMO = -0.327237401873114  LUMO = 0.0477887093671146
  beta  nocc = 8  HOMO = -0.311550458695701  LUMO = -0.264940547543711
cycle= 5 E= -460.196098758126  delta_E= -9.83e-06  |g|= 0.000113  |ddm|= 0.0047
  alpha nocc = 9  HOMO = -0.327246737852981  LUMO = 0.0477738207931645
  beta  nocc = 8  HOMO = -0.311558092615434  LUMO = -0.26494699307475
cycle= 6 E= -460.19609876306  delta_E= -4.93e-09  |g|= 2.43e-05  |ddm|= 0.000176
  alpha nocc = 9  HOMO = -0.327237615693067  LUMO = 0.0477766406543253
  beta  nocc = 8  HOMO = -0.31154855100281  LUMO = -0.264937031525264
Extra cycle  E= -460.196098764579  delta_E= -1.52e-09  |g|= 2.08e-05  |ddm|= 8.49e-05
converged SCF energy = -460.196098764579  <S^2> = 0.75614236  2S+1 = 2.006133
