#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/hn2ts/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:51:27 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 15
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N      0.422816330000  -0.969048070000   0.000000000000 AA    0.799007064694  -1.831235453838   0.000000000000 Bohr
[INPUT]  2 N      0.422816330000   0.153763390000   0.000000000000 AA    0.799007064694   0.290570695085   0.000000000000 Bohr
[INPUT]  3 H     -0.845632650000   0.815284690000   0.000000000000 AA   -1.598014110490   1.540664777651   0.000000000000 Bohr

nuclear repulsion = 27.3748667772025
number of shells = 52
number of NR pGTOs = 234
number of NR cGTOs = 206
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.36


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpb2b9ol9a
max_memory 4000 MB (current use 62 MB)
number electrons alpha = 8  beta = 7
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b5fc3d10940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b5fc3d108b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 482880
init E= -110.150696282675
  alpha nocc = 8  HOMO = -0.159718669307361  LUMO = -0.0665269667589222
  beta  nocc = 7  HOMO = -0.403032963463599  LUMO = -0.159718669307364

WARN: system HOMO -0.159718669307364 >= system LUMO -0.159718669307364

cycle= 1 E= -110.008868757467  delta_E= 0.142  |g|= 0.135  |ddm|= 0.957
  alpha nocc = 8  HOMO = -0.220417324788508  LUMO = -0.0643303694094031
  beta  nocc = 7  HOMO = -0.362312689444375  LUMO = -0.122357849625871
cycle= 2 E= -109.980641748361  delta_E= 0.0282  |g|= 0.299  |ddm|= 0.29
  alpha nocc = 8  HOMO = -0.219575572696135  LUMO = -0.0781737884514303
  beta  nocc = 7  HOMO = -0.387515582556679  LUMO = -0.12280183191061
cycle= 3 E= -110.019544669008  delta_E= -0.0389  |g|= 0.0651  |ddm|= 0.17
  alpha nocc = 8  HOMO = -0.219865425749456  LUMO = -0.0840734688151723
  beta  nocc = 7  HOMO = -0.395893230450243  LUMO = -0.118023464674304
cycle= 4 E= -110.02114847148  delta_E= -0.0016  |g|= 0.0281  |ddm|= 0.0485
  alpha nocc = 8  HOMO = -0.219358146680308  LUMO = -0.0764477793365569
  beta  nocc = 7  HOMO = -0.38844885748937  LUMO = -0.108547062180304
cycle= 5 E= -110.021634802927  delta_E= -0.000486  |g|= 0.009  |ddm|= 0.0304
  alpha nocc = 8  HOMO = -0.221681868122315  LUMO = -0.0786645519393116
  beta  nocc = 7  HOMO = -0.390570360466942  LUMO = -0.108929466746405
cycle= 6 E= -110.021686076515  delta_E= -5.13e-05  |g|= 0.00309  |ddm|= 0.0089
  alpha nocc = 8  HOMO = -0.22147993972822  LUMO = -0.078204899260416
  beta  nocc = 7  HOMO = -0.389976795370873  LUMO = -0.107971382066167
cycle= 7 E= -110.021695874836  delta_E= -9.8e-06  |g|= 0.0012  |ddm|= 0.00488
  alpha nocc = 8  HOMO = -0.221468418956424  LUMO = -0.0783258003908123
  beta  nocc = 7  HOMO = -0.390075536739365  LUMO = -0.107902712857743
cycle= 8 E= -110.021697322013  delta_E= -1.45e-06  |g|= 0.000497  |ddm|= 0.00236
  alpha nocc = 8  HOMO = -0.221480391020211  LUMO = -0.0782705601567186
  beta  nocc = 7  HOMO = -0.390014258571487  LUMO = -0.107852608579234
cycle= 9 E= -110.021697572658  delta_E= -2.51e-07  |g|= 0.000135  |ddm|= 0.000781
  alpha nocc = 8  HOMO = -0.221499582530462  LUMO = -0.0782870459473142
  beta  nocc = 7  HOMO = -0.390019977696313  LUMO = -0.107857565757248
cycle= 10 E= -110.021697596107  delta_E= -2.34e-08  |g|= 4.16e-05  |ddm|= 0.000328
  alpha nocc = 8  HOMO = -0.221490511762778  LUMO = -0.0782787345431634
  beta  nocc = 7  HOMO = -0.39001100327487  LUMO = -0.107845606771447
Extra cycle  E= -110.021697598117  delta_E= -2.01e-09  |g|= 2.95e-05  |ddm|= 5.4e-05
converged SCF energy = -110.021697598117  <S^2> = 0.7691211  2S+1 = 2.0190306
