#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/fch3fcomp/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:27:52 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 28
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 F      0.000000000000   0.000000000000  -1.791371350000 AA    0.000000000000   0.000000000000  -3.385201238892 Bohr
[INPUT]  2 C      0.000000000000   0.000000000000  -0.365617030000 AA    0.000000000000   0.000000000000  -0.690916053177 Bohr
[INPUT]  3 H     -0.511791130000   0.886448240000  -0.017586680000 AA   -0.967145068682   1.675144397203  -0.033234008640 Bohr
[INPUT]  4 H     -0.511791130000  -0.886448240000  -0.017586680000 AA   -0.967145068682  -1.675144397203  -0.033234008640 Bohr
[INPUT]  5 H      1.023582260000   0.000000000000  -0.017586680000 AA    1.934290137363   0.000000000000  -0.033234008640 Bohr
[INPUT]  6 F      0.000000000000   0.000000000000   2.209748410000 AA    0.000000000000   0.000000000000   4.175819299093 Bohr

nuclear repulsion = 64.3622301961202
number of shells = 99
number of NR pGTOs = 423
number of NR cGTOs = 378
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.38


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpum9u67ch
max_memory 4000 MB (current use 62 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b68af20b940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b68af20b8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 994848
init E= -239.391040890159
  HOMO = -0.398199173964896  LUMO = -0.0185223102459157
cycle= 1 E= -239.454815188381  delta_E= -0.0638  |g|= 1.02  |ddm|= 1.21
  HOMO = 0.144774076480159  LUMO = 0.182500157488356
cycle= 2 E= -228.224162760322  delta_E= 11.2  |g|= 2.86  |ddm|=  659
  HOMO = -0.139209736114373  LUMO = 0.0862396493382586
cycle= 3 E= -239.372055416093  delta_E= -11.1  |g|= 1.22  |ddm|=  659
  HOMO = -0.19083992415358  LUMO = 0.0918278892888288
cycle= 4 E= -239.474880780682  delta_E= -0.103  |g|= 0.927  |ddm|= 0.207
  HOMO = -0.189481041290952  LUMO = 0.0981647743092163
cycle= 5 E= -239.498055482206  delta_E= -0.0232  |g|= 0.872  |ddm|= 0.105
  HOMO = -0.160609236495176  LUMO = 0.111319607939161
cycle= 6 E= -239.574838148369  delta_E= -0.0768  |g|= 0.625  |ddm|= 0.187
  HOMO = 0.0314688960372847  LUMO = 0.120993488245955
cycle= 7 E= -239.646251043456  delta_E= -0.0714  |g|= 0.119  |ddm|= 0.804
  HOMO = 0.0155119329814123  LUMO = 0.119136476274892
cycle= 8 E= -239.648719782339  delta_E= -0.00247  |g|= 0.0101  |ddm|= 0.198
  HOMO = 0.0198570152591448  LUMO = 0.119229224762017
cycle= 9 E= -239.648665000583  delta_E= 5.48e-05  |g|= 0.0206  |ddm|= 0.0569
  HOMO = 0.01622389172317  LUMO = 0.11906385693459
cycle= 10 E= -239.64873909143  delta_E= -7.41e-05  |g|= 0.000541  |ddm|= 0.0417
  HOMO = 0.0163435070290339  LUMO = 0.119120548446317
cycle= 11 E= -239.648739143538  delta_E= -5.21e-08  |g|= 0.000232  |ddm|= 0.00183
  HOMO = 0.0162024439399817  LUMO = 0.119114612822362
Extra cycle  E= -239.648739093739  delta_E= 4.98e-08  |g|= 0.000607  |ddm|= 0.00149
converged SCF energy = -239.648739093739
