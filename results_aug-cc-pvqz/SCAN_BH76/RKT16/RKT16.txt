#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/RKT16/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 15:08:29 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 19
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      1.262098590000   0.616730020000   0.000000000000 AA    2.385020677300   1.165450830598   0.000000000000 Bohr
[INPUT]  2 S      0.000000260000   1.059980000000   0.000000000000 AA    0.000000491329   2.003071897516   0.000000000000 Bohr
[INPUT]  3 H     -0.500576010000  -0.278620420000   0.000000000000 AA   -0.945951563428  -0.526516286511   0.000000000000 Bohr
[INPUT]  4 H     -0.761522840000  -1.398089600000   0.000000000000 AA   -1.439069605201  -2.642006441603   0.000000000000 Bohr

nuclear repulsion = 16.4575443006386
number of shells = 61
number of NR pGTOs = 256
number of NR cGTOs = 222
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.22


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpdmmuqsnb
max_memory 4000 MB (current use 62 MB)
number electrons alpha = 10  beta = 9
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b1da0061940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b1da00618b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 663592
init E= -399.824909566784
  alpha nocc = 10  HOMO = -0.22174372465014  LUMO = -0.0278141708538381
  beta  nocc = 9  HOMO = -0.289370503471995  LUMO = -0.221743724650139

WARN: system HOMO -0.221743724650139 >= system LUMO -0.221743724650139

cycle= 1 E= -399.929069606252  delta_E= -0.104  |g|= 0.146  |ddm|= 0.87
  alpha nocc = 10  HOMO = -0.202038136956389  LUMO = 0.000809200879815875
  beta  nocc = 9  HOMO = -0.196341320778248  LUMO = -0.161349820128351
cycle= 2 E= -399.919409294625  delta_E= 0.00966  |g|= 0.194  |ddm|= 0.41
  alpha nocc = 10  HOMO = -0.249516354619992  LUMO = -0.0162369487868995
  beta  nocc = 9  HOMO = -0.243670011276407  LUMO = -0.161919119950056
cycle= 3 E= -399.946653738089  delta_E= -0.0272  |g|= 0.0291  |ddm|= 0.212
  alpha nocc = 10  HOMO = -0.247429027234935  LUMO = -0.0139688876359231
  beta  nocc = 9  HOMO = -0.242850360565907  LUMO = -0.155760921549166
cycle= 4 E= -399.947129072604  delta_E= -0.000475  |g|= 0.0137  |ddm|= 0.0498
  alpha nocc = 10  HOMO = -0.245333134139514  LUMO = -0.0127516250223161
  beta  nocc = 9  HOMO = -0.241008248327733  LUMO = -0.151832435747061
cycle= 5 E= -399.947252322395  delta_E= -0.000123  |g|= 0.00337  |ddm|= 0.0171
  alpha nocc = 10  HOMO = -0.245567834495384  LUMO = -0.0128783616009701
  beta  nocc = 9  HOMO = -0.241108964298605  LUMO = -0.151911674021373
cycle= 6 E= -399.947256987193  delta_E= -4.66e-06  |g|= 0.0014  |ddm|= 0.0063
  alpha nocc = 10  HOMO = -0.245570190332254  LUMO = -0.0129234181579311
  beta  nocc = 9  HOMO = -0.2410642559413  LUMO = -0.151805372456526
cycle= 7 E= -399.947258169456  delta_E= -1.18e-06  |g|= 0.000447  |ddm|= 0.00215
  alpha nocc = 10  HOMO = -0.245541944819241  LUMO = -0.012888023981741
  beta  nocc = 9  HOMO = -0.241017600203631  LUMO = -0.151772988654975
cycle= 8 E= -399.94725830388  delta_E= -1.34e-07  |g|= 0.000127  |ddm|= 0.000908
  alpha nocc = 10  HOMO = -0.245570690469206  LUMO = -0.012903265146925
  beta  nocc = 9  HOMO = -0.241048781514593  LUMO = -0.151800409500194
cycle= 9 E= -399.947258311369  delta_E= -7.49e-09  |g|= 3.47e-05  |ddm|= 0.000304
  alpha nocc = 10  HOMO = -0.245557222081224  LUMO = -0.0128983036782103
  beta  nocc = 9  HOMO = -0.241035719180839  LUMO = -0.15178983769783
Extra cycle  E= -399.947258311626  delta_E= -2.57e-10  |g|= 2.77e-05  |ddm|= 7.57e-05
converged SCF energy = -399.947258311626  <S^2> = 0.76044629  2S+1 = 2.0104192
