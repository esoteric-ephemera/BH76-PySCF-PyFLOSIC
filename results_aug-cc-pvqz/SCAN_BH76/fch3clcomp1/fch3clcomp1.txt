#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/fch3clcomp1/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:16:33 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 36
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Cl     0.000000000000   0.000000000000   2.122964310000 AA    0.000000000000   0.000000000000   4.011821118126 Bohr
[INPUT]  2 C      0.000000000000   0.000000000000   0.272465870000 AA    0.000000000000   0.000000000000   0.514885872591 Bohr
[INPUT]  3 H     -0.513161700000  -0.888822140000  -0.055314460000 AA   -0.969735070616  -1.679630418050  -0.104529180128 Bohr
[INPUT]  4 H     -0.513161700000   0.888822140000  -0.055314460000 AA   -0.969735070616   1.679630418050  -0.104529180128 Bohr
[INPUT]  5 H      1.026323400000   0.000000000000  -0.055314460000 AA    1.939470141232   0.000000000000  -0.104529180128 Bohr
[INPUT]  6 F      0.000000000000   0.000000000000  -2.229486810000 AA    0.000000000000   0.000000000000  -4.213119469230 Bohr

nuclear repulsion = 86.0762853695617
number of shells = 99
number of NR pGTOs = 442
number of NR cGTOs = 382
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.28


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpw15621bj
max_memory 4000 MB (current use 64 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ac01edc9940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ac01edc98b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 979224
init E= -599.782284375718
  HOMO = -0.335464707496266  LUMO = -0.0688456333843931
cycle= 1 E= -599.881968676936  delta_E= -0.0997  |g|= 0.942  |ddm|= 1.42
  HOMO = 0.140283558090206  LUMO = 0.142743017633934
cycle= 2 E= -588.274271758821  delta_E= 11.6  |g|= 2.88  |ddm|=  581
  HOMO = -0.113470692060899  LUMO = 0.0904485291409348
cycle= 3 E= -599.916501128768  delta_E= -11.6  |g|= 0.791  |ddm|=  581
  HOMO = -0.170284719472357  LUMO = 0.0844861647924508
cycle= 4 E= -599.931284513816  delta_E= -0.0148  |g|= 0.791  |ddm|= 0.263
  HOMO = -0.142039431065073  LUMO = 0.101826815030497
cycle= 5 E= -600.000160214198  delta_E= -0.0689  |g|= 0.501  |ddm|= 0.194
  HOMO = -0.11312988338906  LUMO = 0.11033516025311
cycle= 6 E= -600.003663011236  delta_E= -0.0035  |g|= 0.578  |ddm|= 0.233
  HOMO = 0.00586497813722391  LUMO = 0.115560038666073
cycle= 7 E= -600.060422294066  delta_E= -0.0568  |g|= 0.0617  |ddm|= 0.466
  HOMO = 0.013510339110913  LUMO = 0.116235122268778
cycle= 8 E= -600.06040436828  delta_E= 1.79e-05  |g|= 0.0659  |ddm|= 0.0994
  HOMO = 0.00101109494173367  LUMO = 0.115882730096109
cycle= 9 E= -600.061327708861  delta_E= -0.000923  |g|= 0.00649  |ddm|= 0.113
  HOMO = 0.00238681271040722  LUMO = 0.115800323043757
cycle= 10 E= -600.061334035939  delta_E= -6.33e-06  |g|= 0.00449  |ddm|= 0.0123
  HOMO = 0.00173424027846954  LUMO = 0.115808178146424
cycle= 11 E= -600.061337751169  delta_E= -3.72e-06  |g|= 0.000191  |ddm|= 0.00523
  HOMO = 0.00170570408997838  LUMO = 0.115816845952784
cycle= 12 E= -600.061337760237  delta_E= -9.07e-09  |g|= 4.08e-05  |ddm|= 0.000276
  HOMO = 0.00168434254526444  LUMO = 0.115816011957989
Extra cycle  E= -600.061337758702  delta_E= 1.53e-09  |g|= 0.000104  |ddm|= 0.00018
converged SCF energy = -600.061337758702
