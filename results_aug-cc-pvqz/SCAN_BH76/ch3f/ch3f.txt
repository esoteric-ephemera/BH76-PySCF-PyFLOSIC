#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/ch3f/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 16:59:23 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 5
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000   0.065566370000 AA    0.000000000000   0.000000000000   0.123902482282 Bohr
[INPUT]  2 F      0.000000000000   0.000000000000  -1.315628590000 AA    0.000000000000   0.000000000000  -2.486177716748 Bohr
[INPUT]  3 H      0.514916330000  -0.891861250000   0.416687410000 AA    0.973050840766  -1.685373503612   0.787425084454 Bohr
[INPUT]  4 H      0.514916330000   0.891861250000   0.416687410000 AA    0.973050840766   1.685373503612   0.787425084454 Bohr
[INPUT]  5 H     -1.029832670000   0.000000000000   0.416687410000 AA   -1.946101700430   0.000000000000   0.787425084454 Bohr

nuclear repulsion = 37.4230617142413
number of shells = 80
number of NR pGTOs = 330
number of NR cGTOs = 298
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.21


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpjxniziaj
max_memory 4000 MB (current use 60 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ab46d9ce940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ab46d9ce8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 832280
init E= -139.721407116804
  HOMO = -0.393712373036161  LUMO = -0.0125664828056899
cycle= 1 E= -139.725000752268  delta_E= -0.00359  |g|= 0.47  |ddm|= 1.17
  HOMO = -0.205339916493932  LUMO = 0.0134292536383897
cycle= 2 E= -139.658161729261  delta_E= 0.0668  |g|= 0.828  |ddm|= 0.683
  HOMO = -0.306388925987621  LUMO = 0.0115558826291501
cycle= 3 E= -139.759085974056  delta_E= -0.101  |g|= 0.0582  |ddm|= 0.385
  HOMO = -0.311223078977163  LUMO = 0.00980921917772417
cycle= 4 E= -139.759712972926  delta_E= -0.000627  |g|= 0.0245  |ddm|= 0.0349
  HOMO = -0.310508850943622  LUMO = 0.0100811646209263
cycle= 5 E= -139.759826544719  delta_E= -0.000114  |g|= 0.00412  |ddm|= 0.0144
  HOMO = -0.311016029396659  LUMO = 0.0100441964926033
cycle= 6 E= -139.759829406207  delta_E= -2.86e-06  |g|= 0.000187  |ddm|= 0.00247
  HOMO = -0.31105089900864  LUMO = 0.0100469790818876
cycle= 7 E= -139.759829412844  delta_E= -6.64e-09  |g|= 3.15e-05  |ddm|= 0.00041
  HOMO = -0.311054540984512  LUMO = 0.0100481475982795
Extra cycle  E= -139.759829412909  delta_E= -6.53e-11  |g|= 2.41e-05  |ddm|= 6.69e-05
converged SCF energy = -139.759829412909
