#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/hoch3fcomp1/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:53:16 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 28
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.703486420000  -0.157457980000  -0.000016060000 AA   -1.329396666151  -0.297552458327  -0.000030349002 Bohr
[INPUT]  2 O      0.117288130000   0.960081290000   0.000071940000 AA    0.221642443362   1.814290695419   0.000135946897 Bohr
[INPUT]  3 H     -1.757411700000   0.151828130000  -0.008621090000 AA   -3.321026801106   0.286913583705  -0.016291498995 Bohr
[INPUT]  4 H     -0.546341940000  -0.803761730000  -0.878082910000 AA   -1.032436636964  -1.518889539107  -1.659336214561 Bohr
[INPUT]  5 H     -0.558666480000  -0.795453650000   0.886379250000 AA   -1.055726642175  -1.503189543286   1.675014024997 Bohr
[INPUT]  6 H      1.105091660000   0.603220560000   0.000260940000 AA    2.088320579941   1.139921651107   0.000493105135 Bohr
[INPUT]  7 F      2.343526760000   0.041543360000   0.000007940000 AA    4.428623741989   0.078505572694   0.000015004425 Bohr

nuclear repulsion = 73.1739235558926
number of shells = 113
number of NR pGTOs = 471
number of NR cGTOs = 424
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.35


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpdz7idr4q
max_memory 4000 MB (current use 66 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b5c1c2cd940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b5c1c2cd8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 1161880
init E= -215.465533489755
  HOMO = -0.35305839668173  LUMO = -0.00964919597735966
cycle= 1 E= -215.430461731208  delta_E= 0.0351  |g|= 1.07  |ddm|= 1.39
  HOMO = 0.15615092625738  LUMO = 0.168091602119237
cycle= 2 E= -203.776590603893  delta_E= 11.7  |g|= 3.99  |ddm|=  876
  HOMO = -0.0387795176808249  LUMO = 0.0967216921323463
cycle= 3 E= -215.476196192337  delta_E= -11.7  |g|= 0.937  |ddm|=  876
  HOMO = -0.0664747749556194  LUMO = 0.1123891716423
cycle= 4 E= -215.636619417501  delta_E= -0.16  |g|= 0.282  |ddm|= 0.576
  HOMO = -0.0234629404538272  LUMO = 0.112103461101133
cycle= 5 E= -215.638537523004  delta_E= -0.00192  |g|= 0.229  |ddm|= 0.197
  HOMO = -0.0152851052005927  LUMO = 0.11201310871582
cycle= 6 E= -215.646865585086  delta_E= -0.00833  |g|= 0.0177  |ddm|= 0.171
  HOMO = -0.0168994362707105  LUMO = 0.111308665394045
cycle= 7 E= -215.646913481313  delta_E= -4.79e-05  |g|= 0.00798  |ddm|= 0.0201
  HOMO = -0.0176671918252963  LUMO = 0.111118886155964
cycle= 8 E= -215.646925457699  delta_E= -1.2e-05  |g|= 0.00164  |ddm|= 0.0082
  HOMO = -0.0179348788660437  LUMO = 0.111025177157125
cycle= 9 E= -215.646926086506  delta_E= -6.29e-07  |g|= 0.000275  |ddm|= 0.00302
  HOMO = -0.0179557481829414  LUMO = 0.111018265680962
cycle= 10 E= -215.646926093893  delta_E= -7.39e-09  |g|= 0.000212  |ddm|= 0.000949
  HOMO = -0.0180000874365426  LUMO = 0.111016812757069
Extra cycle  E= -215.646926064061  delta_E= 2.98e-08  |g|= 0.000499  |ddm|= 0.000628
converged SCF energy = -215.646926064061
