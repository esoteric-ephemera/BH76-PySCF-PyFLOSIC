#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/f/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:16:07 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 1
[INPUT] num. electrons = 9
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 F      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr

nuclear repulsion = 0
number of shells = 19
number of NR pGTOs = 93
number of NR cGTOs = 80
basis = aug-cc-pvqz
ecp = {}
CPU time:         1.82


******** <class 'pyscf.dft.uks.UKS'> ********
method = UKS-UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmp3m2z4vgs
max_memory 4000 MB (current use 60 MB)
number electrons alpha = 5  beta = 4
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b5f146c3940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b5f146c38b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 162568
init E= -99.6903015561403
  alpha nocc = 5  HOMO = -0.436532938054029  LUMO = 0.0965109343681027

WARN: beta  nocc = 4  HOMO -0.436532938054026 >= LUMO -0.436532938054024


WARN: system HOMO -0.436532938054024 >= system LUMO -0.436532938054024

cycle= 1 E= -99.7404379319347  delta_E= -0.0501  |g|= 0.16  |ddm|= 0.39
  alpha nocc = 5  HOMO = -0.421412049112218  LUMO = 0.0996076706931658
  beta  nocc = 4  HOMO = -0.391257243747749  LUMO = -0.304844940715306
cycle= 2 E= -99.74579835188  delta_E= -0.00536  |g|= 0.0254  |ddm|= 0.0504
  alpha nocc = 5  HOMO = -0.434388047897769  LUMO = 0.0993462218756893
  beta  nocc = 4  HOMO = -0.405360502060978  LUMO = -0.30546448983594
cycle= 3 E= -99.7458628264707  delta_E= -6.45e-05  |g|= 0.0232  |ddm|= 0.0154
  alpha nocc = 5  HOMO = -0.426329040830497  LUMO = 0.100832297234444
  beta  nocc = 4  HOMO = -0.397116024809371  LUMO = -0.29728308708686
cycle= 4 E= -99.7459998263495  delta_E= -0.000137  |g|= 0.003  |ddm|= 0.00817
  alpha nocc = 5  HOMO = -0.427203761401335  LUMO = 0.100825802712173
  beta  nocc = 4  HOMO = -0.39759612000842  LUMO = -0.297709262733626
cycle= 5 E= -99.7460026835376  delta_E= -2.86e-06  |g|= 0.000311  |ddm|= 0.00124
  alpha nocc = 5  HOMO = -0.427300301902356  LUMO = 0.100855414259446
  beta  nocc = 4  HOMO = -0.397549572940355  LUMO = -0.297679435195457
cycle= 6 E= -99.7460027791802  delta_E= -9.56e-08  |g|= 9.1e-05  |ddm|= 0.000373
  alpha nocc = 5  HOMO = -0.427302434353124  LUMO = 0.100859278554802
  beta  nocc = 4  HOMO = -0.397545475930872  LUMO = -0.29767773201831
Extra cycle  E= -99.7460027974713  delta_E= -1.83e-08  |g|= 8.85e-05  |ddm|= 0.000166
converged SCF energy = -99.7460027974713  <S^2> = 0.75268428  2S+1 = 2.0026825
