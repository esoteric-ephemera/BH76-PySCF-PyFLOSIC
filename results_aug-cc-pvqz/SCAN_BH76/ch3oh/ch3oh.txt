#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/ch3oh/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:06:25 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.139269330000   0.334720480000   0.000000000000 AA   -0.263180891252   0.632530035483   0.000000000000 Bohr
[INPUT]  2 O     -0.139269330000  -1.083411040000   0.000000000000 AA   -0.263180891252  -2.047350145930   0.000000000000 Bohr
[INPUT]  3 H     -1.179802830000   0.647591240000   0.000000000000 AA   -2.229504229687   1.223770084267   0.000000000000 Bohr
[INPUT]  4 H      0.767744080000  -1.385391330000   0.000000000000 AA    1.450826044956  -2.618010189047   0.000000000000 Bohr
[INPUT]  5 H      0.345298700000   0.743245320000   0.889541660000 AA    0.652519974168   1.404530098165   1.680990113791 Bohr
[INPUT]  6 H      0.345298700000   0.743245320000  -0.889541660000 AA    0.652519974168   1.404530098165  -1.680990113791 Bohr

nuclear repulsion = 40.393360134975
number of shells = 94
number of NR pGTOs = 378
number of NR cGTOs = 344
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.38


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpbf7hr6fw
max_memory 4000 MB (current use 64 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b7c838e8940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b7c838e88b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 999312
init E= -115.700333730699
  HOMO = -0.364112221098108  LUMO = -0.024066958224822
cycle= 1 E= -115.64457996877  delta_E= 0.0558  |g|= 0.682  |ddm|= 1.29
  HOMO = -0.084924229770664  LUMO = 0.0117184673972035
cycle= 2 E= -115.433277831062  delta_E= 0.211  |g|= 1.25  |ddm|= 1.06
  HOMO = -0.242143566909862  LUMO = -0.000499425661035132
cycle= 3 E= -115.728375556201  delta_E= -0.295  |g|= 0.0682  |ddm|= 0.641
  HOMO = -0.243106421295534  LUMO = -0.000746171693614247
cycle= 4 E= -115.729120088656  delta_E= -0.000745  |g|= 0.0383  |ddm|= 0.0492
  HOMO = -0.243269257242684  LUMO = -0.000382675236390959
cycle= 5 E= -115.729405812376  delta_E= -0.000286  |g|= 0.00605  |ddm|= 0.024
  HOMO = -0.243856591007652  LUMO = -0.000552178307159593
cycle= 6 E= -115.729413067125  delta_E= -7.25e-06  |g|= 0.000485  |ddm|= 0.00431
  HOMO = -0.243970107989174  LUMO = -0.000553754590740902
cycle= 7 E= -115.729413113168  delta_E= -4.6e-08  |g|= 0.000137  |ddm|= 0.00125
  HOMO = -0.244013190888458  LUMO = -0.000560809864342033
Extra cycle  E= -115.729413113453  delta_E= -2.85e-10  |g|= 0.000145  |ddm|= 0.000241
converged SCF energy = -115.729413113453
