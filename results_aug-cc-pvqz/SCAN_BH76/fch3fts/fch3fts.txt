#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/fch3fts/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 17:31:37 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 28
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 F      1.823558790000   0.000519270000   0.000108740000 AA    3.446026685143   0.000981278085   0.000205488819 Bohr
[INPUT]  2 C      0.000144160000  -0.000089730000  -0.000182270000 AA    0.000272422918  -0.000169565125  -0.000344440381 Bohr
[INPUT]  3 H      0.000064160000  -0.304888770000   1.025069230000 AA    0.000121244828  -0.576156273756   1.937100103419 Bohr
[INPUT]  4 H      0.000287160000   1.040178190000  -0.248932400000 AA    0.000542653754   1.965651899846  -0.470414059531 Bohr
[INPUT]  5 H     -0.000094840000  -0.736259250000  -0.776176040000 AA   -0.000179221626  -1.391328339178  -1.466760140049 Bohr
[INPUT]  6 F     -1.823959440000   0.000540270000   0.000112740000 AA   -3.446783803915   0.001020962333   0.000213047723 Bohr

nuclear repulsion = 66.3661265962373
number of shells = 99
number of NR pGTOs = 423
number of NR cGTOs = 378
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.38


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmphuqra8b7
max_memory 4000 MB (current use 64 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2ab094f46940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ab094f468b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 994848
init E= -239.267694759826
  HOMO = -0.410942239632929  LUMO = -0.0857152177706118
cycle= 1 E= -239.440712200804  delta_E= -0.173  |g|= 1.05  |ddm|= 1.15
  HOMO = 0.141709750516149  LUMO = 0.163977138719459
cycle= 2 E= -231.480777544551  delta_E= 7.96  |g|= 4.77  |ddm|=  754
  HOMO = -0.175646945404336  LUMO = 0.0997470140622943
cycle= 3 E= -239.618758907008  delta_E= -8.14  |g|= 0.237  |ddm|=  754
  HOMO = -0.0596398618902343  LUMO = 0.12678281507067
cycle= 4 E= -239.632288078087  delta_E= -0.0135  |g|= 0.128  |ddm|= 0.322
  HOMO = -0.0540957145325542  LUMO = 0.127277598056326
cycle= 5 E= -239.635091998836  delta_E= -0.0028  |g|= 0.05  |ddm|= 0.0709
  HOMO = -0.048553777721013  LUMO = 0.127616465019962
cycle= 6 E= -239.635270981909  delta_E= -0.000179  |g|= 0.0408  |ddm|= 0.0464
  HOMO = -0.0477288697189544  LUMO = 0.127643312234501
cycle= 7 E= -239.635550745074  delta_E= -0.00028  |g|= 0.0046  |ddm|= 0.0194
  HOMO = -0.0479125882097261  LUMO = 0.127507853601561
cycle= 8 E= -239.63555435329  delta_E= -3.61e-06  |g|= 0.000695  |ddm|= 0.00392
  HOMO = -0.0479117899194279  LUMO = 0.127484947778416
cycle= 9 E= -239.635554436216  delta_E= -8.29e-08  |g|= 0.000119  |ddm|= 0.000835
  HOMO = -0.0478690983795126  LUMO = 0.127487578196697
Extra cycle  E= -239.635554430755  delta_E= 5.46e-09  |g|= 0.000229  |ddm|= 0.00022
converged SCF energy = -239.635554430755
