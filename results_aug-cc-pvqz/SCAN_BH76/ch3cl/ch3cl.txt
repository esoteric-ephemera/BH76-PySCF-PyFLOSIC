#INFO: **** input file is /home/tuf53878/BH76/SCAN_BH76/ch3cl/run_single_point.py ****
import numpy as np
from pyscf import gto,dft

opt_type = {
    'float': ['tol','levelshift'],
    'int': ['gridsize','max_cycle','charge','2S','verbose'],
    'bool': ['symm','restricted'],
    'str': ['xyz_fl','basis','xc','xc_lib','ecp','logfile']
}

def str_parse(key,val):
    if key in opt_type['str']:
        # quick return
        return val
    elif key in opt_type['float']:
        return float(val)
    elif key in opt_type['int']:
        return int(val)
    elif key in opt_type['bool']:
        if val.lower() in ['true','t']:
            return True
        elif val.lower() in ['false','f']:
            return False
        else:
            estr = "Could not process key {:} with value {:}; expected boolean".format(key,val)
            raise SystemExit(estr)
    else:
        estr = "Unknown key {:} with value {:}".format(key,val)
        raise SystemExit(estr)

def parse_inp(flnm):

    opts = {}
    with open(flnm,'r') as tfl:
        for row in tfl:
            tmp = [x.strip() for x in row.split('=')]
            if len(tmp) == 1:
                # blank line
                continue
            if ':' in tmp[1]:
                # dict type option
                tmp2 = [x.strip() for x in tmp[1].split(';')]
                opts[tmp[0]] = {}
                for x in tmp2:
                    tmp3 = [y.strip() for y in x.split(':')]
                    opts[tmp[0]][tmp3[0].strip()] = str_parse(tmp[0],tmp3[1])
            else:
                opts[tmp[0]] = str_parse(tmp[0],tmp[1])

    return opts

def molscf():

    dopts = {
        'gridsize': 5, 'basis': 'def2-QZVP', 'symm': False,
        'tol': 1.e-7, 'max_cycle': 500, 'charge': 0, '2S': 0,
        'xc': '1.0*SLATERX, 1.0*PW92C', 'xc_lib': 'XCFun', 'verbose': 4,
        'restricted': False, 'ecp' : {}
        }

    uopts = parse_inp('./inp.txt')

    for akey in uopts:
        dopts[akey] = uopts[akey]

    mol = gto.M(atom=dopts['xyz_fl'], basis=dopts['basis'], symmetry=dopts['symm'], \
        charge=dopts['charge'], spin=dopts['2S'], output = dopts['logfile'], \
        verbose = dopts['verbose'], ecp = dopts['ecp'])

    if dopts['restricted']:
        kscalc = dft.RKS(mol)
    else:
        kscalc = dft.UKS(mol)

    kscalc.max_cycle = dopts['max_cycle']
    kscalc.conv_tol = dopts['tol']
    kscalc.grids.level = dopts['gridsize']

    if dopts['xc_lib'] == 'XCFun':
        kscalc._numint.libxc = dft.xcfun
    elif dopts['xc_lib'] != 'LibXC':
        raise SystemExit('Unknown XC library '+ dopts['xc_lib'])
    kscalc.xc = dopts['xc']

    if 'levelshift' in dopts:
        kscalc.level_shift = dopts['levelshift']

    e0 = kscalc.kernel()

    odict = {
        'Etot': kscalc.e_tot, 'Converged': kscalc.converged,
    }
    fname = './pyscf_run.yaml'
    with open(fname,'w+') as tfl:
        for akey in odict:
            tfl.write('{:}: {:}\n'.format(akey,odict[akey]))

    np.save('./orbital_eigenvalues.npy',kscalc.mo_energy)
    np.save('./orbital_occupancies.npy',kscalc.mo_occ)
    np.save('./orbital_coefficients.npy',kscalc.mo_coeff)

    return e0

if __name__ == "__main__":

    #print(parse_inp('./sample.txt'))
    molscf()
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='e068', release='3.10.0-1160.25.1.el7.x86_64', version='#1 SMP Wed Apr 28 21:49:45 UTC 2021', machine='x86_64')  Threads 20
Python 3.9.4 (default, Jun 10 2021, 14:03:49) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]
numpy 1.22.2  scipy 1.8.0
Date: Mon May  9 16:57:52 2022
PySCF version 2.0.1
PySCF path  /home/tuf53878/.local/lib/python3.9/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 5
[INPUT] num. electrons = 26
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.000000000000   0.000000000000  -0.149916970000 AA    0.000000000000   0.000000000000  -0.283302014725 Bohr
[INPUT]  2 Cl     0.000000000000   0.000000000000   1.632801800000 AA    0.000000000000   0.000000000000   3.085548217697 Bohr
[INPUT]  3 H     -0.513997800000  -0.890270300000  -0.494294940000 AA   -0.971315070629  -1.682367043834  -0.934082061358 Bohr
[INPUT]  4 H     -0.513997800000   0.890270300000  -0.494294940000 AA   -0.971315070629   1.682367043834  -0.934082061358 Bohr
[INPUT]  5 H      1.027995600000   0.000000000000  -0.494294940000 AA    1.942630141258   0.000000000000  -0.934082061358 Bohr

nuclear repulsion = 51.3784915225676
number of shells = 80
number of NR pGTOs = 349
number of NR cGTOs = 302
basis = aug-cc-pvqz
ecp = {}
CPU time:         2.03


******** <class 'pyscf.dft.rks.RKS'> ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 500
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /local_scratch/tmp/444417/tmpwwww7t22
max_memory 4000 MB (current use 60 MB)
XC library pyscf.dft.libxc version 5.1.7
    S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018)
XC functionals = MGGA_X_SCAN, MGGA_C_SCAN
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
    J. Sun, A. Ruzsinszky, and J. P. Perdew, Phys. Rev. Lett. 115, 036402 (2015)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x2b59f4bed940>
grids dens level: 9
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b59f4bed8b0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 816656
init E= -500.113677397624
  HOMO = -0.333151757160605  LUMO = -0.0554006479760735
cycle= 1 E= -500.153634662646  delta_E= -0.04  |g|= 0.219  |ddm|= 1.41
  HOMO = -0.232925260615381  LUMO = 0.00544503305231026
cycle= 2 E= -500.155624622795  delta_E= -0.00199  |g|= 0.209  |ddm|= 0.455
  HOMO = -0.269155924014976  LUMO = -0.0101956091084756
cycle= 3 E= -500.166280338739  delta_E= -0.0107  |g|= 0.0323  |ddm|= 0.178
  HOMO = -0.273115619624808  LUMO = -0.0101400327343115
cycle= 4 E= -500.166445299842  delta_E= -0.000165  |g|= 0.0191  |ddm|= 0.0411
  HOMO = -0.270794982729838  LUMO = -0.0096738058994768
cycle= 5 E= -500.166532217779  delta_E= -8.69e-05  |g|= 0.00377  |ddm|= 0.0176
  HOMO = -0.271475613642059  LUMO = -0.00984309125666793
cycle= 6 E= -500.166535723983  delta_E= -3.51e-06  |g|= 0.000652  |ddm|= 0.00416
  HOMO = -0.271387395300608  LUMO = -0.00981516101858699
cycle= 7 E= -500.166535818085  delta_E= -9.41e-08  |g|= 0.000168  |ddm|= 0.000736
  HOMO = -0.271431249713434  LUMO = -0.0098329835710071
Extra cycle  E= -500.166535818555  delta_E= -4.7e-10  |g|= 0.000157  |ddm|= 0.00026
converged SCF energy = -500.166535818555
